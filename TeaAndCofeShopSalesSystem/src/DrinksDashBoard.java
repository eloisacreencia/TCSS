
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JOptionPane;



/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Marianne
 */
public class DrinksDashBoard extends javax.swing.JFrame {

    /**
     * Creates new form DrinksDashBoard
     */
    public DrinksDashBoard() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        BloodyMaryCoctail = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        Dname = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        Q1 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        Addbtn1 = new javax.swing.JButton();
        P1 = new javax.swing.JTextField();
        MintJulep = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        Dname14 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        P13 = new javax.swing.JLabel();
        Q13 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        Addbtn14 = new javax.swing.JButton();
        BlueBerrySmoothie = new javax.swing.JPanel();
        jLabel51 = new javax.swing.JLabel();
        Dname2 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        P2 = new javax.swing.JLabel();
        Q2 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        BubbleTea = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        Dname3 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        P3 = new javax.swing.JLabel();
        Q3 = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Addbtn3 = new javax.swing.JButton();
        BukoJuice1 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        Dname4 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        P4 = new javax.swing.JLabel();
        Q4 = new javax.swing.JComboBox<>();
        jLabel25 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        Sangrai = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        Dname15 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        P14 = new javax.swing.JLabel();
        Q14 = new javax.swing.JComboBox<>();
        jLabel30 = new javax.swing.JLabel();
        jLabel91 = new javax.swing.JLabel();
        Addbtn15 = new javax.swing.JButton();
        Lemonade = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        Dname12 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        P11 = new javax.swing.JLabel();
        Q11 = new javax.swing.JComboBox<>();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        Addbtn12 = new javax.swing.JButton();
        MangoLassi = new javax.swing.JPanel();
        jLabel38 = new javax.swing.JLabel();
        Dname11 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        P10 = new javax.swing.JLabel();
        Q10 = new javax.swing.JComboBox<>();
        jLabel42 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        Addbtn11 = new javax.swing.JButton();
        CreamEspressoMartini1 = new javax.swing.JPanel();
        jLabel44 = new javax.swing.JLabel();
        Dname8 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        P8 = new javax.swing.JLabel();
        Q8 = new javax.swing.JComboBox<>();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        Addbtn8 = new javax.swing.JButton();
        ChaiTeaLatte1 = new javax.swing.JPanel();
        jLabel50 = new javax.swing.JLabel();
        Dname7 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        P7 = new javax.swing.JLabel();
        Q7 = new javax.swing.JComboBox<>();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        Addbtn7 = new javax.swing.JButton();
        HotChocolate2 = new javax.swing.JPanel();
        jLabel61 = new javax.swing.JLabel();
        Dname6 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        P6 = new javax.swing.JLabel();
        Q6 = new javax.swing.JComboBox<>();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        Addbtn6 = new javax.swing.JButton();
        IceCoffee1 = new javax.swing.JPanel();
        jLabel43 = new javax.swing.JLabel();
        Dname5 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        P5 = new javax.swing.JLabel();
        Q5 = new javax.swing.JComboBox<>();
        jLabel71 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        Addbtn5 = new javax.swing.JButton();
        IcedMatchaLatte1 = new javax.swing.JPanel();
        jLabel73 = new javax.swing.JLabel();
        Dname13 = new javax.swing.JLabel();
        jLabel75 = new javax.swing.JLabel();
        P12 = new javax.swing.JLabel();
        Q12 = new javax.swing.JComboBox<>();
        jLabel77 = new javax.swing.JLabel();
        jLabel78 = new javax.swing.JLabel();
        Addbtn13 = new javax.swing.JButton();
        Mojito1 = new javax.swing.JPanel();
        jLabel79 = new javax.swing.JLabel();
        Dname17 = new javax.swing.JLabel();
        jLabel81 = new javax.swing.JLabel();
        P16 = new javax.swing.JLabel();
        Q16 = new javax.swing.JComboBox<>();
        jLabel83 = new javax.swing.JLabel();
        jLabel100 = new javax.swing.JLabel();
        Addbtn17 = new javax.swing.JButton();
        PinaColada1 = new javax.swing.JPanel();
        jLabel85 = new javax.swing.JLabel();
        Dname16 = new javax.swing.JLabel();
        jLabel87 = new javax.swing.JLabel();
        P15 = new javax.swing.JLabel();
        Q15 = new javax.swing.JComboBox<>();
        jLabel89 = new javax.swing.JLabel();
        jLabel90 = new javax.swing.JLabel();
        Addbtn16 = new javax.swing.JButton();
        MintJulep1 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        Dname10 = new javax.swing.JLabel();
        jLabel93 = new javax.swing.JLabel();
        P9 = new javax.swing.JLabel();
        Q9 = new javax.swing.JComboBox<>();
        jLabel95 = new javax.swing.JLabel();
        jLabel96 = new javax.swing.JLabel();
        Addbtn10 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        NextBtn = new javax.swing.JButton();
        ToCoffeeButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel97 = new javax.swing.JLabel();
        jLabel98 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BloodyMaryCoctail.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setText("Name");
        BloodyMaryCoctail.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, -1, -1));

        Dname.setText("Bloody Mary Coctail");
        BloodyMaryCoctail.add(Dname, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 310, -1, -1));

        jLabel9.setText("Price");
        BloodyMaryCoctail.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, -1, -1));

        Q1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q1ActionPerformed(evt);
            }
        });
        BloodyMaryCoctail.add(Q1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 370, -1, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Bloody_Mary_Coctail.jpg"))); // NOI18N
        BloodyMaryCoctail.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 240, 300));

        jLabel1.setText("Quantity");
        BloodyMaryCoctail.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 370, -1, -1));

        Addbtn1.setText("Add");
        Addbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Addbtn1ActionPerformed(evt);
            }
        });
        BloodyMaryCoctail.add(Addbtn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, -1, -1));

        P1.setText("150");
        P1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P1ActionPerformed(evt);
            }
        });
        BloodyMaryCoctail.add(P1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 340, -1, -1));

        jPanel1.add(BloodyMaryCoctail, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 240, 420));

        MintJulep.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setText("Name");
        MintJulep.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, -1, -1));

        Dname14.setText("Scrath made Arnold Palmer");
        MintJulep.add(Dname14, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 310, -1, -1));

        jLabel14.setText("Price");
        MintJulep.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, -1, -1));

        P13.setText("100");
        MintJulep.add(P13, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 340, -1, -1));

        Q13.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q13ActionPerformed(evt);
            }
        });
        MintJulep.add(Q13, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 380, -1, -1));

        jLabel2.setText("Quantity");
        MintJulep.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 380, -1, -1));

        jLabel26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Scratch-made-Arnold-Palmer.jpg"))); // NOI18N
        MintJulep.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(-60, 0, 300, 300));

        Addbtn14.setText("Add");
        Addbtn14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Addbtn14ActionPerformed(evt);
            }
        });
        MintJulep.add(Addbtn14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, -1, -1));

        jPanel1.add(MintJulep, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 1370, 240, 420));

        BlueBerrySmoothie.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel51.setText("Name");
        BlueBerrySmoothie.add(jLabel51, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, -1, -1));

        Dname2.setText("Blueberry smoothie");
        BlueBerrySmoothie.add(Dname2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 310, -1, -1));

        jLabel53.setText("Price");
        BlueBerrySmoothie.add(jLabel53, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, -1, -1));

        P2.setText("100");
        BlueBerrySmoothie.add(P2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 340, -1, -1));

        Q2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q2ActionPerformed(evt);
            }
        });
        BlueBerrySmoothie.add(Q2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 370, -1, -1));

        jLabel3.setText("Quantity");
        BlueBerrySmoothie.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 370, -1, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Blueberry-smoothie.jpg"))); // NOI18N
        BlueBerrySmoothie.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 240, 300));

        jButton4.setText("Add");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        BlueBerrySmoothie.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, -1, -1));

        jPanel1.add(BlueBerrySmoothie, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 20, 240, 420));

        BubbleTea.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel16.setText("Name");
        BubbleTea.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, -1, -1));

        Dname3.setText("Bubble Tea");
        BubbleTea.add(Dname3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 310, -1, -1));

        jLabel18.setText("Price");
        BubbleTea.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, -1, -1));

        P3.setText("150");
        BubbleTea.add(P3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 340, -1, -1));

        Q3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q3ActionPerformed(evt);
            }
        });
        BubbleTea.add(Q3, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 370, -1, -1));

        jLabel11.setText("Quantity");
        BubbleTea.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 370, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Bubble-Tea.png"))); // NOI18N
        BubbleTea.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 240, 300));

        Addbtn3.setText("Add");
        Addbtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Addbtn3ActionPerformed(evt);
            }
        });
        BubbleTea.add(Addbtn3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, -1, -1));

        jPanel1.add(BubbleTea, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 20, 240, 420));

        BukoJuice1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel21.setText("Name");
        BukoJuice1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, -1, -1));

        Dname4.setText("Buko Juice");
        BukoJuice1.add(Dname4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 310, -1, -1));

        jLabel23.setText("Price");
        BukoJuice1.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, -1, -1));

        P4.setText("50");
        BukoJuice1.add(P4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 340, -1, -1));

        Q4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q4ActionPerformed(evt);
            }
        });
        BukoJuice1.add(Q4, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 370, -1, -1));

        jLabel25.setText("Quantity");
        BukoJuice1.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 370, -1, -1));

        jLabel55.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Buko juice.JPG"))); // NOI18N
        BukoJuice1.add(jLabel55, new org.netbeans.lib.awtextra.AbsoluteConstraints(-170, 0, 490, 290));

        jButton6.setText("Add");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        BukoJuice1.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, -1, -1));

        jPanel1.add(BukoJuice1, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 20, 240, 420));

        Sangrai.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel20.setText("Name");
        Sangrai.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, -1, -1));

        Dname15.setText("Sangrai ");
        Sangrai.add(Dname15, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 310, -1, -1));

        jLabel28.setText("Price");
        Sangrai.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, -1, -1));

        P14.setText("200");
        Sangrai.add(P14, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 340, -1, -1));

        Q14.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q14ActionPerformed(evt);
            }
        });
        Sangrai.add(Q14, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 370, -1, -1));

        jLabel30.setText("Quantity");
        Sangrai.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 370, -1, -1));

        jLabel91.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Sangria.jpg"))); // NOI18N
        Sangrai.add(jLabel91, new org.netbeans.lib.awtextra.AbsoluteConstraints(-100, -170, 600, 470));

        Addbtn15.setText("Add");
        Addbtn15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Addbtn15ActionPerformed(evt);
            }
        });
        Sangrai.add(Addbtn15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, -1, -1));

        jPanel1.add(Sangrai, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 1370, 240, 420));

        Lemonade.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel32.setText("Name");
        Lemonade.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, -1, -1));

        Dname12.setText("Lemonade");
        Lemonade.add(Dname12, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 310, -1, -1));

        jLabel34.setText("Price");
        Lemonade.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, -1, -1));

        P11.setText("50");
        Lemonade.add(P11, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 350, -1, -1));

        Q11.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q11ActionPerformed(evt);
            }
        });
        Lemonade.add(Q11, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 380, -1, -1));

        jLabel36.setText("Quantity");
        Lemonade.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 380, -1, -1));

        jLabel37.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Lemonade.jpg"))); // NOI18N
        jLabel37.setText("jLabel26");
        Lemonade.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(-80, 0, 390, 300));

        Addbtn12.setText("Add");
        Addbtn12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Addbtn12ActionPerformed(evt);
            }
        });
        Lemonade.add(Addbtn12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, -1, -1));

        jPanel1.add(Lemonade, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 920, 240, 420));

        MangoLassi.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel38.setText("Name");
        MangoLassi.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, -1, -1));

        Dname11.setText("Mango Lassi");
        MangoLassi.add(Dname11, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 310, -1, -1));

        jLabel40.setText("Price");
        MangoLassi.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, -1, -1));

        P10.setText("100");
        MangoLassi.add(P10, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 350, -1, -1));

        Q10.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q10ActionPerformed(evt);
            }
        });
        MangoLassi.add(Q10, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 380, -1, -1));

        jLabel42.setText("Quantity");
        MangoLassi.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 380, -1, -1));

        jLabel67.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Mango-Lassi.jpg"))); // NOI18N
        MangoLassi.add(jLabel67, new org.netbeans.lib.awtextra.AbsoluteConstraints(-80, 0, 370, 300));

        Addbtn11.setText("Add");
        Addbtn11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Addbtn11ActionPerformed(evt);
            }
        });
        MangoLassi.add(Addbtn11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, -1, -1));

        jPanel1.add(MangoLassi, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 920, 240, 420));

        CreamEspressoMartini1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel44.setText("Name");
        CreamEspressoMartini1.add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, -1, -1));

        Dname8.setText("Cream Espresso Martini");
        CreamEspressoMartini1.add(Dname8, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 310, -1, -1));

        jLabel46.setText("Price");
        CreamEspressoMartini1.add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, -1, -1));

        P8.setText("250");
        CreamEspressoMartini1.add(P8, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 340, -1, -1));

        Q8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q8ActionPerformed(evt);
            }
        });
        CreamEspressoMartini1.add(Q8, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 370, -1, -1));

        jLabel48.setText("Quantity");
        CreamEspressoMartini1.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 370, -1, -1));

        jLabel49.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/creamy-espresso-martini.jpg"))); // NOI18N
        CreamEspressoMartini1.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 240, 300));

        Addbtn8.setText("Add");
        Addbtn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Addbtn8ActionPerformed(evt);
            }
        });
        CreamEspressoMartini1.add(Addbtn8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, -1, -1));

        jPanel1.add(CreamEspressoMartini1, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 470, 240, 420));

        ChaiTeaLatte1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel50.setText("Name");
        ChaiTeaLatte1.add(jLabel50, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, -1, -1));

        Dname7.setText("Chai Tea Latte");
        ChaiTeaLatte1.add(Dname7, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 310, -1, -1));

        jLabel57.setText("Price");
        ChaiTeaLatte1.add(jLabel57, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, -1, -1));

        P7.setText("150");
        ChaiTeaLatte1.add(P7, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 340, -1, -1));

        Q7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q7ActionPerformed(evt);
            }
        });
        ChaiTeaLatte1.add(Q7, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 370, -1, -1));

        jLabel59.setText("Quantity");
        ChaiTeaLatte1.add(jLabel59, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 370, -1, -1));

        jLabel60.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/chai-tea-latte.jpg"))); // NOI18N
        ChaiTeaLatte1.add(jLabel60, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 240, 300));

        Addbtn7.setText("Add");
        Addbtn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Addbtn7ActionPerformed(evt);
            }
        });
        ChaiTeaLatte1.add(Addbtn7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, -1, -1));

        jPanel1.add(ChaiTeaLatte1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 470, 240, 420));

        HotChocolate2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel61.setText("Name");
        HotChocolate2.add(jLabel61, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, -1, -1));

        Dname6.setText("Hot Chocolate");
        HotChocolate2.add(Dname6, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 310, -1, -1));

        jLabel63.setText("Price");
        HotChocolate2.add(jLabel63, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, -1, -1));

        P6.setText("100");
        HotChocolate2.add(P6, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 340, -1, -1));

        Q6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q6ActionPerformed(evt);
            }
        });
        HotChocolate2.add(Q6, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 370, -1, -1));

        jLabel65.setText("Quantity");
        HotChocolate2.add(jLabel65, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 370, -1, -1));

        jLabel66.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Hot Chocolate.jpg"))); // NOI18N
        HotChocolate2.add(jLabel66, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 240, 300));

        Addbtn6.setText("Add");
        Addbtn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Addbtn6ActionPerformed(evt);
            }
        });
        HotChocolate2.add(Addbtn6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, -1, -1));

        jPanel1.add(HotChocolate2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 470, 240, 420));

        IceCoffee1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel43.setText("Name");
        IceCoffee1.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, -1, -1));

        Dname5.setText("Ice Coffee");
        IceCoffee1.add(Dname5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 310, -1, -1));

        jLabel69.setText("Price");
        IceCoffee1.add(jLabel69, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, -1, -1));

        P5.setText("150");
        IceCoffee1.add(P5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 340, -1, -1));

        Q5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q5ActionPerformed(evt);
            }
        });
        IceCoffee1.add(Q5, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 370, -1, -1));

        jLabel71.setText("Quantity");
        IceCoffee1.add(jLabel71, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 370, -1, -1));

        jLabel72.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/iced-coffee.jpg"))); // NOI18N
        jLabel72.setText("jLabel26");
        IceCoffee1.add(jLabel72, new org.netbeans.lib.awtextra.AbsoluteConstraints(-140, 0, 380, 300));

        Addbtn5.setText("Add");
        Addbtn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Addbtn5ActionPerformed(evt);
            }
        });
        IceCoffee1.add(Addbtn5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, -1, -1));

        jPanel1.add(IceCoffee1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 470, 240, 420));

        IcedMatchaLatte1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel73.setText("Name");
        IcedMatchaLatte1.add(jLabel73, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, -1, -1));

        Dname13.setText("Iced Matcha Latte");
        IcedMatchaLatte1.add(Dname13, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 310, -1, -1));

        jLabel75.setText("Price");
        IcedMatchaLatte1.add(jLabel75, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, -1, -1));

        P12.setText("150");
        IcedMatchaLatte1.add(P12, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 340, -1, -1));

        Q12.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q12ActionPerformed(evt);
            }
        });
        IcedMatchaLatte1.add(Q12, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 380, -1, -1));

        jLabel77.setText("Quantity");
        IcedMatchaLatte1.add(jLabel77, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 380, -1, -1));

        jLabel78.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Iced-Matcha-Latte.jpg"))); // NOI18N
        jLabel78.setText("jLabel26");
        IcedMatchaLatte1.add(jLabel78, new org.netbeans.lib.awtextra.AbsoluteConstraints(-120, 0, 390, 300));

        Addbtn13.setText("Add");
        Addbtn13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Addbtn13ActionPerformed(evt);
            }
        });
        IcedMatchaLatte1.add(Addbtn13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, -1, -1));

        jPanel1.add(IcedMatchaLatte1, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 920, 240, 420));

        Mojito1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel79.setText("Name");
        Mojito1.add(jLabel79, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, -1, -1));

        Dname17.setText("Mojito");
        Mojito1.add(Dname17, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 310, -1, -1));

        jLabel81.setText("Price");
        Mojito1.add(jLabel81, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, -1, -1));

        P16.setText("150");
        Mojito1.add(P16, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 340, -1, -1));

        Q16.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q16ActionPerformed(evt);
            }
        });
        Mojito1.add(Q16, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 370, -1, -1));

        jLabel83.setText("Quantity");
        Mojito1.add(jLabel83, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 370, -1, -1));

        jLabel100.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/mojito.jpg"))); // NOI18N
        Mojito1.add(jLabel100, new org.netbeans.lib.awtextra.AbsoluteConstraints(-80, 0, 320, 290));

        Addbtn17.setText("Add");
        Addbtn17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Addbtn17ActionPerformed(evt);
            }
        });
        Mojito1.add(Addbtn17, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, -1, -1));

        jPanel1.add(Mojito1, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 1370, 240, 420));

        PinaColada1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel85.setText("Name");
        PinaColada1.add(jLabel85, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, -1, -1));

        Dname16.setText("Pina Colada");
        PinaColada1.add(Dname16, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 310, -1, -1));

        jLabel87.setText("Price");
        PinaColada1.add(jLabel87, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, -1, -1));

        P15.setText("200");
        PinaColada1.add(P15, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 340, -1, -1));

        Q15.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q15ActionPerformed(evt);
            }
        });
        PinaColada1.add(Q15, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 370, -1, -1));

        jLabel89.setText("Quantity");
        PinaColada1.add(jLabel89, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 370, -1, -1));

        jLabel90.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Pina-colada.jpg"))); // NOI18N
        jLabel90.setText("jLabel26");
        PinaColada1.add(jLabel90, new org.netbeans.lib.awtextra.AbsoluteConstraints(-130, 0, 460, 300));

        Addbtn16.setText("Add");
        Addbtn16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Addbtn16ActionPerformed(evt);
            }
        });
        PinaColada1.add(Addbtn16, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, -1, -1));

        jPanel1.add(PinaColada1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 1370, 240, 420));

        MintJulep1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel31.setText("Name");
        MintJulep1.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, -1, -1));

        Dname10.setText("Mint Julep");
        MintJulep1.add(Dname10, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 310, -1, -1));

        jLabel93.setText("Price");
        MintJulep1.add(jLabel93, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, -1, -1));

        P9.setText("200");
        MintJulep1.add(P9, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 350, -1, -1));

        Q9.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q9ActionPerformed(evt);
            }
        });
        MintJulep1.add(Q9, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 380, -1, -1));

        jLabel95.setText("Quantity");
        MintJulep1.add(jLabel95, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 380, -1, -1));

        jLabel96.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Mint Julep.jpg"))); // NOI18N
        MintJulep1.add(jLabel96, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 240, 300));

        Addbtn10.setText("Add");
        Addbtn10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Addbtn10ActionPerformed(evt);
            }
        });
        MintJulep1.add(Addbtn10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, -1, -1));

        jPanel1.add(MintJulep1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 920, 240, 420));

        jButton3.setText("Total");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 1820, 80, 35));

        NextBtn.setText("Next");
        NextBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextBtnActionPerformed(evt);
            }
        });
        jPanel1.add(NextBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 1820, 80, 35));

        ToCoffeeButton3.setText("Home");
        ToCoffeeButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ToCoffeeButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(ToCoffeeButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 1820, 80, 35));

        jButton1.setText("Coffee");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 1800, -1, -1));

        jButton19.setText("Tea");
        jPanel1.add(jButton19, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 1830, 70, -1));

        jButton20.setText("Drinks");
        jPanel1.add(jButton20, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 1800, -1, -1));

        jButton21.setText("Pastry");
        jPanel1.add(jButton21, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 1830, -1, -1));

        jButton22.setText("Dishes");
        jPanel1.add(jButton22, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 1820, -1, -1));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/brgcoffee.jpg"))); // NOI18N
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1120, 1870));

        jScrollPane1.setViewportView(jPanel1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 1140, 590));

        jLabel97.setFont(new java.awt.Font("Segoe UI Historic", 3, 18)); // NOI18N
        jLabel97.setForeground(new java.awt.Color(255, 255, 255));
        jLabel97.setText("Drinks Menu ");
        getContentPane().add(jLabel97, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 10, 160, 50));

        jLabel98.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/brgcoffee.jpg"))); // NOI18N
        getContentPane().add(jLabel98, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1180, 720));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Q1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q1ActionPerformed
        // TODO add your handling code here:
          // TODO add your handling code here:
        int p = Integer.parseInt(P1.getText());
        int q = Integer.parseInt((String) Q1.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P1.setText(t);
    }//GEN-LAST:event_Q1ActionPerformed

    private void Q13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Q13ActionPerformed

    private void Q2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q2ActionPerformed
        // TODO add your handling code here:
        int p = Integer.parseInt(P2.getText());
        int q = Integer.parseInt((String) Q2.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P2.setText(t);
    }//GEN-LAST:event_Q2ActionPerformed

    private void Q3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q3ActionPerformed
        // TODO add your handling code here:
        int p = Integer.parseInt(P3.getText());
        int q = Integer.parseInt((String) Q3.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P3.setText(t);
    }//GEN-LAST:event_Q3ActionPerformed

    private void Q4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q4ActionPerformed
        // TODO add your handling code here:
        int p = Integer.parseInt(P4.getText());
        int q = Integer.parseInt((String) Q4.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P4.setText(t);
    }//GEN-LAST:event_Q4ActionPerformed

    private void Q14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q14ActionPerformed
        // TODO add your handling code here:
        int p = Integer.parseInt(P14.getText());
        int q = Integer.parseInt((String) Q14.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P14.setText(t);
    }//GEN-LAST:event_Q14ActionPerformed

    private void Q11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q11ActionPerformed
        // TODO add your handling code here:
        int p = Integer.parseInt(P11.getText());
        int q = Integer.parseInt((String) Q11.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P11.setText(t);
    }//GEN-LAST:event_Q11ActionPerformed

    private void Q10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q10ActionPerformed
        // TODO add your handling code here:
        int p = Integer.parseInt(P10.getText());
        int q = Integer.parseInt((String) Q10.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P10.setText(t);
    }//GEN-LAST:event_Q10ActionPerformed

    private void Q8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q8ActionPerformed
        // TODO add your handling code here:
        int p = Integer.parseInt(P10.getText());
        int q = Integer.parseInt((String) Q10.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P10.setText(t);
    }//GEN-LAST:event_Q8ActionPerformed

    private void Q7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q7ActionPerformed
        // TODO add your handling code here:
        int p = Integer.parseInt(P7.getText());
        int q = Integer.parseInt((String) Q7.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P7.setText(t);
    }//GEN-LAST:event_Q7ActionPerformed

    private void Q6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q6ActionPerformed
        // TODO add your handling code here:
        int p = Integer.parseInt(P6.getText());
        int q = Integer.parseInt((String) Q6.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P6.setText(t);
    }//GEN-LAST:event_Q6ActionPerformed

    private void Q5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q5ActionPerformed
        // TODO add your handling code here:
        int p = Integer.parseInt(P5.getText());
        int q = Integer.parseInt((String) Q5.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P5.setText(t);
    }//GEN-LAST:event_Q5ActionPerformed

    private void Q12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q12ActionPerformed
        // TODO add your handling code here:
        int p = Integer.parseInt(P12.getText());
        int q = Integer.parseInt((String) Q12.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P12.setText(t);
    }//GEN-LAST:event_Q12ActionPerformed

    private void Q16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q16ActionPerformed
        // TODO add your handling code here:
        int p = Integer.parseInt(P16.getText());
        int q = Integer.parseInt((String) Q16.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P16.setText(t);
    }//GEN-LAST:event_Q16ActionPerformed

    private void Q15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q15ActionPerformed
        // TODO add your handling code here:
        int p = Integer.parseInt(P15.getText());
        int q = Integer.parseInt((String) Q15.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P15.setText(t);
    }//GEN-LAST:event_Q15ActionPerformed

    private void Q9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q9ActionPerformed
        // TODO add your handling code here:
        int p = Integer.parseInt(P9.getText());
        int q = Integer.parseInt((String) Q9.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P9.setText(t);
    }//GEN-LAST:event_Q9ActionPerformed

    private void Addbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Addbtn1ActionPerformed
        // TODO add your handling code here:
        String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
        Dname.setText("Bloody Marry Coctail ");

        String DrinkName = Dname.getText();
        String price = P1.getText();
        String quantity = (String) Q1.getSelectedItem();

        String size = null;

        // Validate user input
        if (DrinkName.isEmpty() || price.isEmpty() || quantity == null) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `drinks` (`DrinkName`, `price`, `quantity`) VALUES (?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, DrinkName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

    
            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Drink  added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } // Log closing error
        }
    }//GEN-LAST:event_Addbtn1ActionPerformed

    private void P1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P1ActionPerformed
        P1.setText("150");
       
    }//GEN-LAST:event_P1ActionPerformed

    private void NextBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextBtnActionPerformed
        // TODO add your handling code here:
        FoodDashBoard fd = new FoodDashBoard();
        fd.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_NextBtnActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
         String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
        Dname.setText("Blueberry smoothie ");

        String DrinkName = Dname.getText();
        String price = P2.getText();
        String quantity = (String) Q2.getSelectedItem();

        String size = null;

        // Validate user input
        if (DrinkName.isEmpty() || price.isEmpty() || quantity == null) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `drinks` (`DrinkName`, `price`, `quantity`) VALUES (?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, DrinkName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

    
            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Drink  added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } // Log closing error
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void Addbtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Addbtn3ActionPerformed
        // TODO add your handling code here:
               String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
        Dname.setText("Buble Tea");
        
        String DrinkName = Dname.getText();
        String price = P3.getText();
        String quantity = (String) Q3.getSelectedItem();

        String size = null;

        // Validate user input
        if (DrinkName.isEmpty() || price.isEmpty() || quantity == null) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `drinks` (`DrinkName`, `price`, `quantity`) VALUES (?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, DrinkName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

    
            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Drink  added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            }
    }//GEN-LAST:event_Addbtn3ActionPerformed
 }
    private void Addbtn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Addbtn7ActionPerformed
            // TODO add your handling code here:
    String url = "jdbc:mysql://localhost:3306/oop";   
    String user = "root";  
    String password = ""; 
    
    // Set default values
    Dname.setText("Chai Tea Latte ");

    // Retrieve input values
    String DrinkName = Dname.getText();
    String price = P7.getText();
    String quantity = (String) Q7.getSelectedItem();

    // Validate user input
    if (DrinkName.isEmpty() || price.isEmpty() || quantity == null) {
        JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
        return; // Stop execution if validation fails
    }

    // Validate price is numeric
    try {
        Double.parseDouble(price);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
        return; // Stop execution if validation fails
    }

    // Define the SQL query
    String query = "INSERT INTO `drinks` (`DrinkName`, `price`, `quantity`) VALUES (?, ?, ?)";
    Connection connection = null;
    PreparedStatement stmt = null;

    try {
        // Establish the database connection
        connection = DriverManager.getConnection(url, user, password);
        stmt = connection.prepareStatement(query);

        // Set parameter values
        stmt.setString(1, DrinkName);             
        stmt.setString(2, price);  
        stmt.setString(3, quantity);

        // Execute query
        int rowsInserted = stmt.executeUpdate();
        if (rowsInserted > 0) {
            JOptionPane.showMessageDialog(null, "Drink added successfully!");
        }

    } catch (HeadlessException | SQLException e) {
        System.out.println("Connection error: " + e.getMessage());
    } finally {
        // Proper resource cleanup
        try {
            if (stmt != null) {
                stmt.close();
            }
            if (connection != null) {
                connection.close();
            }
        } catch (SQLException e) {
            System.out.println("Error closing resources: " + e.getMessage());
        }
    }

    }//GEN-LAST:event_Addbtn7ActionPerformed

    private void Addbtn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Addbtn8ActionPerformed
        // TODO add your handling code here:
        String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
        Dname.setText("Creamy Espresso Martini");

        String DrinkName = Dname.getText();
        String price = P8.getText();
        String quantity = (String) Q8.getSelectedItem();

        String size = null;

        // Validate user input
        if (DrinkName.isEmpty() || price.isEmpty() || quantity == null) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `drinks` (`DrinkName`, `price`, `quantity`) VALUES (?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, DrinkName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

    
            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Drink  added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            }    
    }
    }//GEN-LAST:event_Addbtn8ActionPerformed

    private void Addbtn10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Addbtn10ActionPerformed
        // TODO add your handling code here:
                String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
        Dname.setText("Mint Julep");

        String DrinkName = Dname.getText();
        String price = P9.getText();
        String quantity = (String) Q9.getSelectedItem();

        String size = null;

        // Validate user input
        if (DrinkName.isEmpty() || price.isEmpty() || quantity == null) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `drinks` (`DrinkName`, `price`, `quantity`) VALUES (?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, DrinkName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

    
            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Drink  added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            }    
    }
    }//GEN-LAST:event_Addbtn10ActionPerformed

    private void Addbtn11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Addbtn11ActionPerformed
        // TODO add your handling code here:
                String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
        Dname.setText("Mango Lassi");

        String DrinkName = Dname.getText();
        String price = P10.getText();
        String quantity = (String) Q10.getSelectedItem();

        String size = null;

        // Validate user input
        if (DrinkName.isEmpty() || price.isEmpty() || quantity == null) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `drinks` (`DrinkName`, `price`, `quantity`) VALUES (?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, DrinkName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

    
            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Drink  added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            }    
    }
    }//GEN-LAST:event_Addbtn11ActionPerformed

    private void Addbtn12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Addbtn12ActionPerformed
        // TODO add your handling code here:
                String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
        Dname.setText("Lemonade");

        String DrinkName = Dname.getText();
        String price = P11.getText();
        String quantity = (String) Q11.getSelectedItem();

        String size = null;

        // Validate user input
        if (DrinkName.isEmpty() || price.isEmpty() || quantity == null) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `drinks` (`DrinkName`, `price`, `quantity`) VALUES (?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, DrinkName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

    
            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Drink  added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            }    
    }
    }//GEN-LAST:event_Addbtn12ActionPerformed

    private void Addbtn13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Addbtn13ActionPerformed
        // TODO add your handling code here:
                String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
        Dname.setText("Ice Matcha Latte");

        String DrinkName = Dname.getText();
        String price = P12.getText();
        String quantity = (String) Q12.getSelectedItem();

        String size = null;

        // Validate user input
        if (DrinkName.isEmpty() || price.isEmpty() || quantity == null) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `drinks` (`DrinkName`, `price`, `quantity`) VALUES (?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, DrinkName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

    
            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Drink  added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            }    
    }
    }//GEN-LAST:event_Addbtn13ActionPerformed

    private void Addbtn14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Addbtn14ActionPerformed
        // TODO add your handling code here:
                String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
        Dname.setText("Scrath made Arnold Palmer");

        String DrinkName = Dname.getText();
        String price = P13.getText();
        String quantity = (String) Q13.getSelectedItem();

        String size = null;

        // Validate user input
        if (DrinkName.isEmpty() || price.isEmpty() || quantity == null) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `drinks` (`DrinkName`, `price`, `quantity`) VALUES (?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, DrinkName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

    
            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Drink  added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            }    
    }
    }//GEN-LAST:event_Addbtn14ActionPerformed

    private void Addbtn15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Addbtn15ActionPerformed
        // TODO add your handling code here:
                String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
        Dname.setText("Sangrai  ");

        String DrinkName = Dname.getText();
        String price = P14.getText();
        String quantity = (String) Q14.getSelectedItem();

        String size = null;

        // Validate user input
        if (DrinkName.isEmpty() || price.isEmpty() || quantity == null) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `drinks` (`DrinkName`, `price`, `quantity`) VALUES (?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, DrinkName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

    
            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Drink  added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            }    
    }
    }//GEN-LAST:event_Addbtn15ActionPerformed

    private void Addbtn16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Addbtn16ActionPerformed
        // TODO add your handling code here:
                String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
        Dname.setText("Pina Colada");

        String DrinkName = Dname.getText();
        String price = P15.getText();
        String quantity = (String) Q15.getSelectedItem();

        String size = null;

        // Validate user input
        if (DrinkName.isEmpty() || price.isEmpty() || quantity == null) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `drinks` (`DrinkName`, `price`, `quantity`) VALUES (?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, DrinkName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

    
            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Drink  added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            }    
    }
    }//GEN-LAST:event_Addbtn16ActionPerformed

    private void Addbtn17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Addbtn17ActionPerformed
        // TODO add your handling code here:
                String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
        Dname.setText("Mojito");

        String DrinkName = Dname.getText();
        String price = P16.getText();
        String quantity = (String) Q16.getSelectedItem();

        String size = null;

        // Validate user input
        if (DrinkName.isEmpty() || price.isEmpty() || quantity == null) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `drinks` (`DrinkName`, `price`, `quantity`) VALUES (?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, DrinkName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

    
            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Drink  added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            }    
    }
    }//GEN-LAST:event_Addbtn17ActionPerformed

    private void ToCoffeeButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ToCoffeeButton3ActionPerformed
       this.dispose();
       HomePage hp = new HomePage();
       hp.setVisible(true);
    }//GEN-LAST:event_ToCoffeeButton3ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
        CoffeeDashboad cd = new CoffeeDashboad();
        cd.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void Addbtn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Addbtn6ActionPerformed
        // TODO add your handling code here:
        String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
        Dname.setText("Hot Chocolate");

        String DrinkName = Dname.getText();
        String price = P6.getText();
        String quantity = (String) Q6.getSelectedItem();

        String size = null;

        // Validate user input
        if (DrinkName.isEmpty() || price.isEmpty() || quantity == null) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `drinks` (`DrinkName`, `price`, `quantity`) VALUES (?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, DrinkName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

    
            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Drink  added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            }    
    }
    }//GEN-LAST:event_Addbtn6ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
        Dname.setText("Buko Juice ");

        String DrinkName = Dname.getText();
        String price = P4.getText();
        String quantity = (String) Q4.getSelectedItem();

        String size = null;

        // Validate user input
        if (DrinkName.isEmpty() || price.isEmpty() || quantity == null) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `drinks` (`DrinkName`, `price`, `quantity`) VALUES (?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, DrinkName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

    
            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Drink  added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            }    
    }                                               
    }//GEN-LAST:event_jButton6ActionPerformed

    private void Addbtn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Addbtn5ActionPerformed
        // TODO add your handling code here:
    String url = "jdbc:mysql://localhost:3306/oop";   
    String user = "root";  
    String password = ""; 
    
    // Set default values
    Dname.setText("Ice Coffee ");

    // Retrieve input values
    String DrinkName = Dname.getText();
    String price = P5.getText();
    String quantity = (String) Q5.getSelectedItem();

    // Validate user input
    if (DrinkName.isEmpty() || price.isEmpty() || quantity == null) {
        JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
        return; // Stop execution if validation fails
    }

    // Validate price is numeric
    try {
        Double.parseDouble(price);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
        return; // Stop execution if validation fails
    }

    // Define the SQL query
    String query = "INSERT INTO `drinks` (`DrinkName`, `price`, `quantity`) VALUES (?, ?, ?)";
    Connection connection = null;
    PreparedStatement stmt = null;

    try {
        // Establish the database connection
        connection = DriverManager.getConnection(url, user, password);
        stmt = connection.prepareStatement(query);

        // Set parameter values
        stmt.setString(1, DrinkName);             
        stmt.setString(2, price);  
        stmt.setString(3, quantity);

        // Execute query
        int rowsInserted = stmt.executeUpdate();
        if (rowsInserted > 0) {
            JOptionPane.showMessageDialog(null, "Drink added successfully!");
        }

    } catch (Exception e) {
        System.out.println("Connection error: " + e.getMessage());
    } finally {
        // Proper resource cleanup
        try {
            if (stmt != null) {
                stmt.close();
            }
            if (connection != null) {
                connection.close();
            }
        } catch (Exception e) {
            System.out.println("Error closing resources: " + e.getMessage());
        }
    }
    }//GEN-LAST:event_Addbtn5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DrinksDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DrinksDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DrinksDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DrinksDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DrinksDashBoard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Addbtn1;
    private javax.swing.JButton Addbtn10;
    private javax.swing.JButton Addbtn11;
    private javax.swing.JButton Addbtn12;
    private javax.swing.JButton Addbtn13;
    private javax.swing.JButton Addbtn14;
    private javax.swing.JButton Addbtn15;
    private javax.swing.JButton Addbtn16;
    private javax.swing.JButton Addbtn17;
    private javax.swing.JButton Addbtn3;
    private javax.swing.JButton Addbtn5;
    private javax.swing.JButton Addbtn6;
    private javax.swing.JButton Addbtn7;
    private javax.swing.JButton Addbtn8;
    private javax.swing.JPanel BloodyMaryCoctail;
    private javax.swing.JPanel BlueBerrySmoothie;
    private javax.swing.JPanel BubbleTea;
    private javax.swing.JPanel BukoJuice1;
    private javax.swing.JPanel ChaiTeaLatte1;
    private javax.swing.JPanel CreamEspressoMartini1;
    private javax.swing.JLabel Dname;
    private javax.swing.JLabel Dname10;
    private javax.swing.JLabel Dname11;
    private javax.swing.JLabel Dname12;
    private javax.swing.JLabel Dname13;
    private javax.swing.JLabel Dname14;
    private javax.swing.JLabel Dname15;
    private javax.swing.JLabel Dname16;
    private javax.swing.JLabel Dname17;
    private javax.swing.JLabel Dname2;
    private javax.swing.JLabel Dname3;
    private javax.swing.JLabel Dname4;
    private javax.swing.JLabel Dname5;
    private javax.swing.JLabel Dname6;
    private javax.swing.JLabel Dname7;
    private javax.swing.JLabel Dname8;
    private javax.swing.JPanel HotChocolate2;
    private javax.swing.JPanel IceCoffee1;
    private javax.swing.JPanel IcedMatchaLatte1;
    private javax.swing.JPanel Lemonade;
    private javax.swing.JPanel MangoLassi;
    private javax.swing.JPanel MintJulep;
    private javax.swing.JPanel MintJulep1;
    private javax.swing.JPanel Mojito1;
    private javax.swing.JButton NextBtn;
    private javax.swing.JTextField P1;
    private javax.swing.JLabel P10;
    private javax.swing.JLabel P11;
    private javax.swing.JLabel P12;
    private javax.swing.JLabel P13;
    private javax.swing.JLabel P14;
    private javax.swing.JLabel P15;
    private javax.swing.JLabel P16;
    private javax.swing.JLabel P2;
    private javax.swing.JLabel P3;
    private javax.swing.JLabel P4;
    private javax.swing.JLabel P5;
    private javax.swing.JLabel P6;
    private javax.swing.JLabel P7;
    private javax.swing.JLabel P8;
    private javax.swing.JLabel P9;
    private javax.swing.JPanel PinaColada1;
    private javax.swing.JComboBox<String> Q1;
    private javax.swing.JComboBox<String> Q10;
    private javax.swing.JComboBox<String> Q11;
    private javax.swing.JComboBox<String> Q12;
    private javax.swing.JComboBox<String> Q13;
    private javax.swing.JComboBox<String> Q14;
    private javax.swing.JComboBox<String> Q15;
    private javax.swing.JComboBox<String> Q16;
    private javax.swing.JComboBox<String> Q2;
    private javax.swing.JComboBox<String> Q3;
    private javax.swing.JComboBox<String> Q4;
    private javax.swing.JComboBox<String> Q5;
    private javax.swing.JComboBox<String> Q6;
    private javax.swing.JComboBox<String> Q7;
    private javax.swing.JComboBox<String> Q8;
    private javax.swing.JComboBox<String> Q9;
    private javax.swing.JPanel Sangrai;
    private javax.swing.JButton ToCoffeeButton3;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel100;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel95;
    private javax.swing.JLabel jLabel96;
    private javax.swing.JLabel jLabel97;
    private javax.swing.JLabel jLabel98;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
