
//import com.sun.jdi.connect.spi.Connection;
import java.sql.Statement;
import java.sql.DriverManager;
import javax.swing.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


/**
 *
 * @author Marianne
 */
public class CoffeeDashboad extends javax.swing.JFrame {
private ArrayList<Order> orderList = new ArrayList<>();
     private String coffeeSize; 
    private int coffeeQuantity; 
    private double coffeePrice; 
private List<Order> orders = new ArrayList<>();
    public CoffeeDashboad() {
        initComponents();
    }
    public List<Order> getOrders() {
        // In a real-world scenario, this list would come from your order processing logic
        return orders;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AmericanoBTG = new javax.swing.ButtonGroup();
        BrewedBTG = new javax.swing.ButtonGroup();
        CacaoBTG = new javax.swing.ButtonGroup();
        ConPannaBTG = new javax.swing.ButtonGroup();
        CortadoBTG = new javax.swing.ButtonGroup();
        EspressoBTG = new javax.swing.ButtonGroup();
        HazelNutBTG = new javax.swing.ButtonGroup();
        LatteBTG = new javax.swing.ButtonGroup();
        CaramelBTG = new javax.swing.ButtonGroup();
        DarkChocolateBTG = new javax.swing.ButtonGroup();
        WhiteMochaBTG = new javax.swing.ButtonGroup();
        FlatWhiteBTG = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        ToHomePage = new javax.swing.JButton();
        TotalBUtton = new javax.swing.JButton();
        Americano = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        CoffeeName8 = new javax.swing.JLabel();
        CoffeePrice8 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        CoffeSize8 = new javax.swing.JLabel();
        Cname = new javax.swing.JLabel();
        Q1 = new javax.swing.JComboBox<>();
        XL1 = new javax.swing.JCheckBox();
        s1 = new javax.swing.JCheckBox();
        m1 = new javax.swing.JCheckBox();
        L1 = new javax.swing.JCheckBox();
        P1 = new javax.swing.JTextField();
        AddBtn1 = new javax.swing.JButton();
        Brewed = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        CoffeeName14 = new javax.swing.JLabel();
        CoffeePrice14 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        CoffeSize14 = new javax.swing.JLabel();
        Cname2 = new javax.swing.JLabel();
        Q2 = new javax.swing.JComboBox<>();
        XL2 = new javax.swing.JCheckBox();
        s2 = new javax.swing.JCheckBox();
        m2 = new javax.swing.JCheckBox();
        L2 = new javax.swing.JCheckBox();
        P2 = new javax.swing.JTextField();
        AddBtn2 = new javax.swing.JButton();
        Cacao = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        CoffeeName15 = new javax.swing.JLabel();
        CoffeePrice15 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        CoffeSize15 = new javax.swing.JLabel();
        Cname3 = new javax.swing.JLabel();
        Q3 = new javax.swing.JComboBox<>();
        XL3 = new javax.swing.JCheckBox();
        s3 = new javax.swing.JCheckBox();
        m3 = new javax.swing.JCheckBox();
        L3 = new javax.swing.JCheckBox();
        P3 = new javax.swing.JTextField();
        AddBtn3 = new javax.swing.JButton();
        ConPanna = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        CoffeeName16 = new javax.swing.JLabel();
        CoffeePrice16 = new javax.swing.JLabel();
        jLabel88 = new javax.swing.JLabel();
        CoffeSize16 = new javax.swing.JLabel();
        Cname4 = new javax.swing.JLabel();
        Q4 = new javax.swing.JComboBox<>();
        XL4 = new javax.swing.JCheckBox();
        s4 = new javax.swing.JCheckBox();
        m4 = new javax.swing.JCheckBox();
        L4 = new javax.swing.JCheckBox();
        P4 = new javax.swing.JTextField();
        jButton9 = new javax.swing.JButton();
        Cortado = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        CoffeeName17 = new javax.swing.JLabel();
        CoffeePrice17 = new javax.swing.JLabel();
        jLabel90 = new javax.swing.JLabel();
        CoffeSize17 = new javax.swing.JLabel();
        Cname8 = new javax.swing.JLabel();
        Q8 = new javax.swing.JComboBox<>();
        XL8 = new javax.swing.JCheckBox();
        s8 = new javax.swing.JCheckBox();
        m8 = new javax.swing.JCheckBox();
        L8 = new javax.swing.JCheckBox();
        jButton7 = new javax.swing.JButton();
        P8 = new javax.swing.JTextField();
        Espresso = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        CoffeeName18 = new javax.swing.JLabel();
        CoffeePrice18 = new javax.swing.JLabel();
        jLabel92 = new javax.swing.JLabel();
        CoffeSize18 = new javax.swing.JLabel();
        Cname7 = new javax.swing.JLabel();
        Q7 = new javax.swing.JComboBox<>();
        XL7 = new javax.swing.JCheckBox();
        s7 = new javax.swing.JCheckBox();
        m7 = new javax.swing.JCheckBox();
        L7 = new javax.swing.JCheckBox();
        jButton5 = new javax.swing.JButton();
        P7 = new javax.swing.JTextField();
        Hazelnut = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        CoffeeName19 = new javax.swing.JLabel();
        CoffeePrice19 = new javax.swing.JLabel();
        jLabel94 = new javax.swing.JLabel();
        CoffeSize19 = new javax.swing.JLabel();
        Cname6 = new javax.swing.JLabel();
        Q6 = new javax.swing.JComboBox<>();
        XL6 = new javax.swing.JCheckBox();
        s6 = new javax.swing.JCheckBox();
        m6 = new javax.swing.JCheckBox();
        L6 = new javax.swing.JCheckBox();
        jButton6 = new javax.swing.JButton();
        P6 = new javax.swing.JTextField();
        Latte = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        CoffeeName20 = new javax.swing.JLabel();
        CoffeePrice20 = new javax.swing.JLabel();
        jLabel96 = new javax.swing.JLabel();
        CoffeSize20 = new javax.swing.JLabel();
        Cname5 = new javax.swing.JLabel();
        Q5 = new javax.swing.JComboBox<>();
        XL5 = new javax.swing.JCheckBox();
        s5 = new javax.swing.JCheckBox();
        m5 = new javax.swing.JCheckBox();
        L5 = new javax.swing.JCheckBox();
        jButton8 = new javax.swing.JButton();
        P5 = new javax.swing.JTextField();
        Caramel = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        CoffeeName21 = new javax.swing.JLabel();
        CoffeePrice21 = new javax.swing.JLabel();
        jLabel98 = new javax.swing.JLabel();
        CoffeSize21 = new javax.swing.JLabel();
        Cname9 = new javax.swing.JLabel();
        Q9 = new javax.swing.JComboBox<>();
        XL9 = new javax.swing.JCheckBox();
        s9 = new javax.swing.JCheckBox();
        m9 = new javax.swing.JCheckBox();
        L9 = new javax.swing.JCheckBox();
        jButton4 = new javax.swing.JButton();
        P9 = new javax.swing.JTextField();
        DarkChocolate = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        CoffeeName22 = new javax.swing.JLabel();
        CoffeePrice22 = new javax.swing.JLabel();
        jLabel100 = new javax.swing.JLabel();
        CoffeSize22 = new javax.swing.JLabel();
        Cname10 = new javax.swing.JLabel();
        Q10 = new javax.swing.JComboBox<>();
        XL10 = new javax.swing.JCheckBox();
        s10 = new javax.swing.JCheckBox();
        m10 = new javax.swing.JCheckBox();
        L10 = new javax.swing.JCheckBox();
        ADDbtn10 = new javax.swing.JButton();
        P10 = new javax.swing.JTextField();
        WhiteMocha = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        CoffeeName23 = new javax.swing.JLabel();
        CoffeePrice23 = new javax.swing.JLabel();
        jLabel102 = new javax.swing.JLabel();
        CoffeSize23 = new javax.swing.JLabel();
        Cname11 = new javax.swing.JLabel();
        Q11 = new javax.swing.JComboBox<>();
        XL11 = new javax.swing.JCheckBox();
        s11 = new javax.swing.JCheckBox();
        m11 = new javax.swing.JCheckBox();
        L11 = new javax.swing.JCheckBox();
        CoffeSize26 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        P11 = new javax.swing.JTextField();
        FlatWhite = new javax.swing.JPanel();
        CoffeeName25 = new javax.swing.JLabel();
        CoffeePrice25 = new javax.swing.JLabel();
        jLabel107 = new javax.swing.JLabel();
        CoffeSize25 = new javax.swing.JLabel();
        Cname12 = new javax.swing.JLabel();
        Q12 = new javax.swing.JComboBox<>();
        jLabel35 = new javax.swing.JLabel();
        XL12 = new javax.swing.JCheckBox();
        s12 = new javax.swing.JCheckBox();
        m12 = new javax.swing.JCheckBox();
        L12 = new javax.swing.JCheckBox();
        jButton2 = new javax.swing.JButton();
        P12 = new javax.swing.JTextField();
        NextBtn = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        BackGroundImage2 = new javax.swing.JLabel();
        CoffeeMenu = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setBackground(new java.awt.Color(230, 183, 153));
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ToHomePage.setText("Home");
        ToHomePage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ToHomePageActionPerformed(evt);
            }
        });
        jPanel1.add(ToHomePage, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 1140, 80, 35));

        TotalBUtton.setText("Total");
        TotalBUtton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TotalBUttonActionPerformed(evt);
            }
        });
        jPanel1.add(TotalBUtton, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 1140, -1, 38));

        Americano.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Americano.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Americano.jpg"))); // NOI18N
        Americano.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 150));

        CoffeeName8.setText("Name:");
        Americano.add(CoffeeName8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        CoffeePrice8.setText("Price");
        Americano.add(CoffeePrice8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        jLabel52.setText("Quantity");
        Americano.add(jLabel52, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        CoffeSize8.setText("Size");
        Americano.add(CoffeSize8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, -1, -1));

        Cname.setText("Americano");
        Americano.add(Cname, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, -1));

        Q1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q1ActionPerformed(evt);
            }
        });
        Americano.add(Q1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));

        AmericanoBTG.add(XL1);
        XL1.setText("Extra Large");
        XL1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XL1ActionPerformed(evt);
            }
        });
        Americano.add(XL1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 290, -1, -1));

        AmericanoBTG.add(s1);
        s1.setText("Small");
        s1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s1ActionPerformed(evt);
            }
        });
        Americano.add(s1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, -1, -1));

        AmericanoBTG.add(m1);
        m1.setText("Medium");
        m1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m1ActionPerformed(evt);
            }
        });
        Americano.add(m1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 270, -1, -1));

        AmericanoBTG.add(L1);
        L1.setText("Large");
        L1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                L1ActionPerformed(evt);
            }
        });
        Americano.add(L1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, -1, -1));

        P1.setText("150");
        P1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P1ActionPerformed(evt);
            }
        });
        Americano.add(P1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, -1, -1));

        AddBtn1.setText("Add");
        AddBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBtn1ActionPerformed(evt);
            }
        });
        Americano.add(AddBtn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 60, 20));

        jPanel1.add(Americano, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 13, 211, 320));

        Brewed.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Brewed.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Brewed Coffee.jpg"))); // NOI18N
        Brewed.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 150));

        CoffeeName14.setText("Name:");
        Brewed.add(CoffeeName14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        CoffeePrice14.setText("Price");
        Brewed.add(CoffeePrice14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        jLabel54.setText("Quantity");
        Brewed.add(jLabel54, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        CoffeSize14.setText("Size");
        Brewed.add(CoffeSize14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, -1, -1));

        Cname2.setText("Brewed ");
        Brewed.add(Cname2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, -1));

        Q2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q2ActionPerformed(evt);
            }
        });
        Brewed.add(Q2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));

        BrewedBTG.add(XL2);
        XL2.setText("Extra Large");
        XL2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XL2ActionPerformed(evt);
            }
        });
        Brewed.add(XL2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 290, -1, -1));

        BrewedBTG.add(s2);
        s2.setText("Small");
        s2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s2ActionPerformed(evt);
            }
        });
        Brewed.add(s2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, -1, -1));

        BrewedBTG.add(m2);
        m2.setText("Medium");
        m2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m2ActionPerformed(evt);
            }
        });
        Brewed.add(m2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 270, -1, -1));

        BrewedBTG.add(L2);
        L2.setText("Large");
        L2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                L2ActionPerformed(evt);
            }
        });
        Brewed.add(L2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, -1, -1));

        P2.setText("150");
        P2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P2ActionPerformed(evt);
            }
        });
        Brewed.add(P2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, -1, -1));

        AddBtn2.setText("Add");
        AddBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBtn2ActionPerformed(evt);
            }
        });
        Brewed.add(AddBtn2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 60, 20));

        jPanel1.add(Brewed, new org.netbeans.lib.awtextra.AbsoluteConstraints(259, 13, 211, 320));

        Cacao.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Cacao.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Cacao.jpg"))); // NOI18N
        Cacao.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 210, 150));

        CoffeeName15.setText("Name:");
        Cacao.add(CoffeeName15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        CoffeePrice15.setText("Price");
        Cacao.add(CoffeePrice15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        jLabel56.setText("Quantity");
        Cacao.add(jLabel56, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        CoffeSize15.setText("Size");
        Cacao.add(CoffeSize15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, -1, -1));

        Cname3.setText("Cacao");
        Cacao.add(Cname3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, -1));

        Q3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q3ActionPerformed(evt);
            }
        });
        Cacao.add(Q3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));

        CacaoBTG.add(XL3);
        XL3.setText("Extra Large");
        XL3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XL3ActionPerformed(evt);
            }
        });
        Cacao.add(XL3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 290, -1, -1));

        CacaoBTG.add(s3);
        s3.setText("Small");
        s3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s3ActionPerformed(evt);
            }
        });
        Cacao.add(s3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, -1, -1));

        CacaoBTG.add(m3);
        m3.setText("Medium");
        m3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m3ActionPerformed(evt);
            }
        });
        Cacao.add(m3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 270, -1, -1));

        CacaoBTG.add(L3);
        L3.setText("Large");
        L3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                L3ActionPerformed(evt);
            }
        });
        Cacao.add(L3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, -1, -1));

        P3.setText("150");
        P3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P3ActionPerformed(evt);
            }
        });
        Cacao.add(P3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, -1, -1));

        AddBtn3.setText("Add");
        AddBtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBtn3ActionPerformed(evt);
            }
        });
        Cacao.add(AddBtn3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 60, 20));

        jPanel1.add(Cacao, new org.netbeans.lib.awtextra.AbsoluteConstraints(509, 13, 211, 320));

        ConPanna.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ConPanna.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Con panna coffee.jpg"))); // NOI18N
        ConPanna.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 150));

        CoffeeName16.setText("Name:");
        ConPanna.add(CoffeeName16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        CoffeePrice16.setText("Price");
        ConPanna.add(CoffeePrice16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        jLabel88.setText("Quantity");
        ConPanna.add(jLabel88, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        CoffeSize16.setText("Size");
        ConPanna.add(CoffeSize16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, -1, -1));

        Cname4.setText("Con Panna");
        ConPanna.add(Cname4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, -1));

        Q4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q4ActionPerformed(evt);
            }
        });
        ConPanna.add(Q4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));

        ConPannaBTG.add(XL4);
        XL4.setText("Extra Large");
        ConPanna.add(XL4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 290, -1, -1));

        ConPannaBTG.add(s4);
        s4.setText("Small");
        s4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s4ActionPerformed(evt);
            }
        });
        ConPanna.add(s4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, -1, -1));

        ConPannaBTG.add(m4);
        m4.setText("Medium");
        m4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m4ActionPerformed(evt);
            }
        });
        ConPanna.add(m4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 270, -1, -1));

        ConPannaBTG.add(L4);
        L4.setText("Large");
        ConPanna.add(L4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, -1, -1));

        P4.setText("150");
        P4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P4ActionPerformed(evt);
            }
        });
        ConPanna.add(P4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, -1, -1));

        jButton9.setText("Add");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        ConPanna.add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 60, 20));

        jPanel1.add(ConPanna, new org.netbeans.lib.awtextra.AbsoluteConstraints(753, 13, 211, 320));

        Cortado.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Cortado.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Cortado coffee.jpg"))); // NOI18N
        Cortado.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 150));

        CoffeeName17.setText("Name:");
        Cortado.add(CoffeeName17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        CoffeePrice17.setText("Price");
        Cortado.add(CoffeePrice17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        jLabel90.setText("Quantity");
        Cortado.add(jLabel90, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        CoffeSize17.setText("Size");
        Cortado.add(CoffeSize17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, -1, -1));

        Cname8.setText("Cortado");
        Cortado.add(Cname8, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, -1));

        Q8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q8ActionPerformed(evt);
            }
        });
        Cortado.add(Q8, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));

        CortadoBTG.add(XL8);
        XL8.setText("Extra Large");
        XL8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XL8ActionPerformed(evt);
            }
        });
        Cortado.add(XL8, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 290, -1, -1));

        CortadoBTG.add(s8);
        s8.setText("Small");
        s8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s8ActionPerformed(evt);
            }
        });
        Cortado.add(s8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, -1, -1));

        CortadoBTG.add(m8);
        m8.setText("Medium");
        m8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m8ActionPerformed(evt);
            }
        });
        Cortado.add(m8, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 270, -1, -1));

        CortadoBTG.add(L8);
        L8.setText("Large");
        L8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                L8ActionPerformed(evt);
            }
        });
        Cortado.add(L8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, -1, -1));

        jButton7.setText("Add");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        Cortado.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 60, 20));

        P8.setText("150");
        P8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P8ActionPerformed(evt);
            }
        });
        Cortado.add(P8, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, -1, -1));

        jPanel1.add(Cortado, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 371, 211, 338));

        Espresso.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Espresso.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Espresso coffee.jpg"))); // NOI18N
        Espresso.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 150));

        CoffeeName18.setText("Name:");
        Espresso.add(CoffeeName18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        CoffeePrice18.setText("Price");
        Espresso.add(CoffeePrice18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        jLabel92.setText("Quantity");
        Espresso.add(jLabel92, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        CoffeSize18.setText("Size");
        Espresso.add(CoffeSize18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, -1, -1));

        Cname7.setText("Espresso");
        Espresso.add(Cname7, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, -1));

        Q7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q7ActionPerformed(evt);
            }
        });
        Espresso.add(Q7, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));

        EspressoBTG.add(XL7);
        XL7.setText("Extra Large");
        XL7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XL7ActionPerformed(evt);
            }
        });
        Espresso.add(XL7, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 290, -1, -1));

        EspressoBTG.add(s7);
        s7.setText("Small");
        s7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s7ActionPerformed(evt);
            }
        });
        Espresso.add(s7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, -1, -1));

        EspressoBTG.add(m7);
        m7.setText("Medium");
        m7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m7ActionPerformed(evt);
            }
        });
        Espresso.add(m7, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 270, -1, -1));

        EspressoBTG.add(L7);
        L7.setText("Large");
        L7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                L7ActionPerformed(evt);
            }
        });
        Espresso.add(L7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, -1, -1));

        jButton5.setText("Add");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        Espresso.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 60, 20));

        P7.setText("150");
        P7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P7ActionPerformed(evt);
            }
        });
        Espresso.add(P7, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, -1, -1));

        jPanel1.add(Espresso, new org.netbeans.lib.awtextra.AbsoluteConstraints(259, 371, 211, 338));

        Hazelnut.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Hazelnut.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Hazelnut coffee.jpg"))); // NOI18N
        Hazelnut.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 150));

        CoffeeName19.setText("Name:");
        Hazelnut.add(CoffeeName19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        CoffeePrice19.setText("Price");
        Hazelnut.add(CoffeePrice19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        jLabel94.setText("Quantity");
        Hazelnut.add(jLabel94, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        CoffeSize19.setText("Size");
        Hazelnut.add(CoffeSize19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, -1, -1));

        Cname6.setText("Hazelnut ");
        Hazelnut.add(Cname6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, -1));

        Q6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q6ActionPerformed(evt);
            }
        });
        Hazelnut.add(Q6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));

        HazelNutBTG.add(XL6);
        XL6.setText("Extra Large");
        XL6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XL6ActionPerformed(evt);
            }
        });
        Hazelnut.add(XL6, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 290, -1, -1));

        HazelNutBTG.add(s6);
        s6.setText("Small");
        s6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s6ActionPerformed(evt);
            }
        });
        Hazelnut.add(s6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, -1, -1));

        HazelNutBTG.add(m6);
        m6.setText("Medium");
        m6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m6ActionPerformed(evt);
            }
        });
        Hazelnut.add(m6, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 270, -1, -1));

        HazelNutBTG.add(L6);
        L6.setText("Large");
        L6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                L6ActionPerformed(evt);
            }
        });
        Hazelnut.add(L6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, -1, -1));

        jButton6.setText("Add");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        Hazelnut.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 60, 20));

        P6.setText("150");
        P6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P6ActionPerformed(evt);
            }
        });
        Hazelnut.add(P6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, -1, -1));

        jPanel1.add(Hazelnut, new org.netbeans.lib.awtextra.AbsoluteConstraints(509, 371, 211, 338));

        Latte.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Latte.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Latte coffee.jpg"))); // NOI18N
        Latte.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 150));

        CoffeeName20.setText("Name:");
        Latte.add(CoffeeName20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        CoffeePrice20.setText("Price");
        Latte.add(CoffeePrice20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        jLabel96.setText("Quantity");
        Latte.add(jLabel96, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        CoffeSize20.setText("Size");
        Latte.add(CoffeSize20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, -1, -1));

        Cname5.setText("Latte");
        Latte.add(Cname5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, -1));

        Q5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q5ActionPerformed(evt);
            }
        });
        Latte.add(Q5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));

        LatteBTG.add(XL5);
        XL5.setText("Extra Large");
        XL5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XL5ActionPerformed(evt);
            }
        });
        Latte.add(XL5, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 290, -1, -1));

        LatteBTG.add(s5);
        s5.setText("Small");
        s5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s5ActionPerformed(evt);
            }
        });
        Latte.add(s5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, -1, -1));

        LatteBTG.add(m5);
        m5.setText("Medium");
        m5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m5ActionPerformed(evt);
            }
        });
        Latte.add(m5, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 270, -1, 20));

        LatteBTG.add(L5);
        L5.setText("Large");
        L5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                L5ActionPerformed(evt);
            }
        });
        Latte.add(L5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, -1, -1));

        jButton8.setText("Add");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        Latte.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 60, 20));

        P5.setText("150");
        P5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P5ActionPerformed(evt);
            }
        });
        Latte.add(P5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, -1, -1));

        jPanel1.add(Latte, new org.netbeans.lib.awtextra.AbsoluteConstraints(753, 371, 211, 338));

        Caramel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Caramel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/caramel.jpg"))); // NOI18N
        Caramel.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 150));

        CoffeeName21.setText("Name:");
        Caramel.add(CoffeeName21, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        CoffeePrice21.setText("Price");
        Caramel.add(CoffeePrice21, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        jLabel98.setText("Quantity");
        Caramel.add(jLabel98, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        CoffeSize21.setText("Size");
        Caramel.add(CoffeSize21, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, -1, -1));

        Cname9.setText("Caramel");
        Caramel.add(Cname9, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, -1));

        Q9.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q9ActionPerformed(evt);
            }
        });
        Caramel.add(Q9, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));

        CaramelBTG.add(XL9);
        XL9.setText("Extra Large");
        XL9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XL9ActionPerformed(evt);
            }
        });
        Caramel.add(XL9, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 290, -1, -1));

        CaramelBTG.add(s9);
        s9.setText("Small");
        s9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s9ActionPerformed(evt);
            }
        });
        Caramel.add(s9, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, -1, -1));

        CaramelBTG.add(m9);
        m9.setText("Medium");
        m9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m9ActionPerformed(evt);
            }
        });
        Caramel.add(m9, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 270, -1, -1));

        CaramelBTG.add(L9);
        L9.setText("Large");
        L9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                L9ActionPerformed(evt);
            }
        });
        Caramel.add(L9, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, -1, -1));

        jButton4.setText("Add");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        Caramel.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 60, 20));

        P9.setText("150");
        P9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P9ActionPerformed(evt);
            }
        });
        Caramel.add(P9, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, -1, -1));

        jPanel1.add(Caramel, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 743, 211, 338));

        DarkChocolate.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        DarkChocolate.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/dark chocolate.jpg"))); // NOI18N
        DarkChocolate.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 150));

        CoffeeName22.setText("Name:");
        DarkChocolate.add(CoffeeName22, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        CoffeePrice22.setText("Price");
        DarkChocolate.add(CoffeePrice22, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        jLabel100.setText("Quantity");
        DarkChocolate.add(jLabel100, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        CoffeSize22.setText("Size");
        DarkChocolate.add(CoffeSize22, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, -1, -1));

        Cname10.setText("Dark  Chocolate");
        DarkChocolate.add(Cname10, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, -1));

        Q10.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q10ActionPerformed(evt);
            }
        });
        DarkChocolate.add(Q10, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));

        DarkChocolateBTG.add(XL10);
        XL10.setText("Extra Large");
        XL10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XL10ActionPerformed(evt);
            }
        });
        DarkChocolate.add(XL10, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 290, -1, -1));

        DarkChocolateBTG.add(s10);
        s10.setText("Small");
        s10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s10ActionPerformed(evt);
            }
        });
        DarkChocolate.add(s10, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, -1, -1));

        DarkChocolateBTG.add(m10);
        m10.setText("Medium");
        m10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m10ActionPerformed(evt);
            }
        });
        DarkChocolate.add(m10, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 270, -1, -1));

        DarkChocolateBTG.add(L10);
        L10.setText("Large");
        L10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                L10ActionPerformed(evt);
            }
        });
        DarkChocolate.add(L10, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, -1, -1));

        ADDbtn10.setText("Add");
        ADDbtn10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ADDbtn10ActionPerformed(evt);
            }
        });
        DarkChocolate.add(ADDbtn10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 60, 20));

        P10.setText("150");
        P10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P10ActionPerformed(evt);
            }
        });
        DarkChocolate.add(P10, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, -1, -1));

        jPanel1.add(DarkChocolate, new org.netbeans.lib.awtextra.AbsoluteConstraints(259, 743, 211, 338));

        WhiteMocha.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        WhiteMocha.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/white mocha.jpg"))); // NOI18N
        WhiteMocha.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 150));

        CoffeeName23.setText("Name:");
        WhiteMocha.add(CoffeeName23, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        CoffeePrice23.setText("Price");
        WhiteMocha.add(CoffeePrice23, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        jLabel102.setText("Quantity");
        WhiteMocha.add(jLabel102, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        CoffeSize23.setText("Size");
        WhiteMocha.add(CoffeSize23, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, -1, -1));

        Cname11.setText("White Mocha");
        WhiteMocha.add(Cname11, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, -1));

        Q11.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q11ActionPerformed(evt);
            }
        });
        WhiteMocha.add(Q11, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));

        WhiteMochaBTG.add(XL11);
        XL11.setText("Extra Large");
        XL11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XL11ActionPerformed(evt);
            }
        });
        WhiteMocha.add(XL11, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 290, -1, -1));

        WhiteMochaBTG.add(s11);
        s11.setText("Small");
        s11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s11ActionPerformed(evt);
            }
        });
        WhiteMocha.add(s11, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, -1, -1));

        WhiteMochaBTG.add(m11);
        m11.setText("Medium");
        m11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m11ActionPerformed(evt);
            }
        });
        WhiteMocha.add(m11, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 270, -1, -1));

        WhiteMochaBTG.add(L11);
        L11.setText("Large");
        L11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                L11ActionPerformed(evt);
            }
        });
        WhiteMocha.add(L11, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, -1, -1));

        CoffeSize26.setText("Size");
        WhiteMocha.add(CoffeSize26, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, -1, -1));

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        WhiteMocha.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 60, 20));

        P11.setText("150");
        P11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P11ActionPerformed(evt);
            }
        });
        WhiteMocha.add(P11, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, -1, -1));

        jPanel1.add(WhiteMocha, new org.netbeans.lib.awtextra.AbsoluteConstraints(509, 743, 211, 338));

        FlatWhite.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        FlatWhite.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CoffeeName25.setText("Name:");
        FlatWhite.add(CoffeeName25, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        CoffeePrice25.setText("Price");
        FlatWhite.add(CoffeePrice25, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        jLabel107.setText("Quantity");
        FlatWhite.add(jLabel107, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        CoffeSize25.setText("Size");
        FlatWhite.add(CoffeSize25, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, -1, -1));

        Cname12.setText("Flat White");
        FlatWhite.add(Cname12, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 160, -1, -1));

        Q12.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        Q12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q12ActionPerformed(evt);
            }
        });
        FlatWhite.add(Q12, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 220, -1, -1));

        jLabel35.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Flat white coffee.jpg"))); // NOI18N
        FlatWhite.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 150));

        FlatWhiteBTG.add(XL12);
        XL12.setText("Extra Large");
        XL12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XL12ActionPerformed(evt);
            }
        });
        FlatWhite.add(XL12, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 300, -1, -1));

        FlatWhiteBTG.add(s12);
        s12.setText("Small");
        s12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s12ActionPerformed(evt);
            }
        });
        FlatWhite.add(s12, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, -1, -1));

        FlatWhiteBTG.add(m12);
        m12.setText("Medium");
        m12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m12ActionPerformed(evt);
            }
        });
        FlatWhite.add(m12, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 280, -1, -1));

        FlatWhiteBTG.add(L12);
        L12.setText("Large");
        L12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                L12ActionPerformed(evt);
            }
        });
        FlatWhite.add(L12, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 300, -1, -1));

        jButton2.setText("Add");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        FlatWhite.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 60, 20));

        P12.setText("150");
        P12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P12ActionPerformed(evt);
            }
        });
        FlatWhite.add(P12, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, -1, -1));

        jPanel1.add(FlatWhite, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 740, 210, 340));

        NextBtn.setText("Next");
        NextBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextBtnActionPerformed(evt);
            }
        });
        jPanel1.add(NextBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 1140, 80, 35));

        jButton12.setText("Coffee");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton12, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 1100, -1, -1));

        jButton13.setText("Tea");
        jPanel1.add(jButton13, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 1140, 70, -1));

        jButton14.setText("Drinks");
        jPanel1.add(jButton14, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 1100, -1, -1));

        jButton15.setText("Pastry");
        jPanel1.add(jButton15, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 1140, -1, -1));

        jButton16.setText("Dishes");
        jPanel1.add(jButton16, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 1120, -1, -1));

        BackGroundImage2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/brgcoffee.jpg"))); // NOI18N
        BackGroundImage2.setText("jLabel38");
        jPanel1.add(BackGroundImage2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1010, 1200));

        jScrollPane1.setViewportView(jPanel1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 89, 1010, 500));

        CoffeeMenu.setFont(new java.awt.Font("Segoe UI Historic", 3, 18)); // NOI18N
        CoffeeMenu.setForeground(new java.awt.Color(255, 255, 255));
        CoffeeMenu.setText("Coffee Menu");
        getContentPane().add(CoffeeMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(428, 14, 124, 55));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/brgcoffee.jpg"))); // NOI18N
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1130, 870));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ToHomePageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ToHomePageActionPerformed
        // TODO add your handling code here:
        //CoffeeDashboad cd = new CoffeeDashboad();
        //cd.setVisible(false);
        this.dispose();
       HomePage hp = new HomePage();
       hp.setVisible(true);
        
    }//GEN-LAST:event_ToHomePageActionPerformed

    private void m12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m12ActionPerformed
        // TODO add your handling code here:
        P12.setText("160");
    }//GEN-LAST:event_m12ActionPerformed

    private void s1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s1ActionPerformed
        // TODO add your handling code here:
        P1.setText("150");
    }//GEN-LAST:event_s1ActionPerformed

    private void m1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m1ActionPerformed
        // TODO add your handling code here:
        P1.setText("160");
        
    }//GEN-LAST:event_m1ActionPerformed

    private void s11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s11ActionPerformed
        // TODO add your handling code here:
        P11.setText("150");
    }//GEN-LAST:event_s11ActionPerformed

    private void m11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m11ActionPerformed
        // TODO add your handling code here:
        P11.setText("160");
    }//GEN-LAST:event_m11ActionPerformed

    private void P1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_P1ActionPerformed

    private void XL1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XL1ActionPerformed
        // TODO add your handling code here:
        P1.setText("180");
    }//GEN-LAST:event_XL1ActionPerformed

    private void L1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_L1ActionPerformed
        // TODO add your handling code here:
        P1.setText("170");
    }//GEN-LAST:event_L1ActionPerformed

    private void Q1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q1ActionPerformed
        // TODO add your handling code here:
        int p = Integer.parseInt(P1.getText());
        int q = Integer.parseInt((String) Q1.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P1.setText(t);
    }//GEN-LAST:event_Q1ActionPerformed

    private void s2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s2ActionPerformed
        // TODO add your handling code here:
        P2.setText("150");
    }//GEN-LAST:event_s2ActionPerformed

    private void XL2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XL2ActionPerformed
        // TODO add your handling code here:
        P2.setText("180");
    }//GEN-LAST:event_XL2ActionPerformed

    private void m2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m2ActionPerformed
        // TODO add your handling code here:
           P2.setText("160");
    }//GEN-LAST:event_m2ActionPerformed

    private void Q2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q2ActionPerformed
        // TODO add your handling code here:
        int p = Integer.parseInt(P2.getText());
        int q = Integer.parseInt((String) Q2.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P2.setText(t);
    }//GEN-LAST:event_Q2ActionPerformed

    private void L2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_L2ActionPerformed
        // TODO add your handling code here:
           P2.setText("170");
    }//GEN-LAST:event_L2ActionPerformed

    private void P2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_P2ActionPerformed

    private void s3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s3ActionPerformed
        // TODO add your handling code here:..
        P3.setText("150");
    }//GEN-LAST:event_s3ActionPerformed

    private void m3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m3ActionPerformed
        // TODO add your handling code here:
        P3.setText("160");
    }//GEN-LAST:event_m3ActionPerformed

    private void L3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_L3ActionPerformed
        // TODO add your handling code here:
        P3.setText("170");
    }//GEN-LAST:event_L3ActionPerformed

    private void XL3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XL3ActionPerformed
        // TODO add your handling code here:
        P3.setText("180");
    }//GEN-LAST:event_XL3ActionPerformed

    private void Q3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q3ActionPerformed
        // TODO add your handling code here:
        int p = Integer.parseInt(P3.getText());
        int q = Integer.parseInt((String) Q3.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P3.setText(t);
    }//GEN-LAST:event_Q3ActionPerformed

    private void Q4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q4ActionPerformed
        // TODO add your handling code here:
        int p = Integer.parseInt(P4.getText());
        int q = Integer.parseInt((String) Q4.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P4.setText(t);
    }//GEN-LAST:event_Q4ActionPerformed

    private void P3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_P3ActionPerformed

    private void P4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_P4ActionPerformed

    private void s4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s4ActionPerformed
        // TODO add your handling code here:
        P4.setText("150");
    }//GEN-LAST:event_s4ActionPerformed

    private void m4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m4ActionPerformed
        // TODO add your handling code here:
        P4.setText("160");
    }//GEN-LAST:event_m4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
        Cname11.setText("White Mocha");
        

        String CoffeeName = Cname11.getText();
        String price = P11.getText();
        String quantity = (String) Q11.getSelectedItem();

        String size = null;

        // Validate user input
        if (CoffeeName.isEmpty() || price.isEmpty() || quantity == null || 
            (!s11.isSelected() && !m11.isSelected() && !L11.isSelected() && !XL11.isSelected())) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `coffee` (`CoffeeName`, `price`, `quantity`, `size`) VALUES (?, ?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, CoffeeName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

            // Determine size
            if (s11.isSelected()) {
                size = s11.getText();
            } else if (m11.isSelected()) {
                size = m11.getText();
            } else if (L11.isSelected()) {
                size = L11.getText();
            } else if (XL11.isSelected()) {
                size = XL11.getText();
            }else {
                System.out.println("No coffee size  ");
            }
            stmt.setString(4, size);

            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Coffee added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } // Log closing error
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
        Cname12.setText("Flat White");
        

        String CoffeeName = Cname12.getText();
        String price = P12.getText();
        String quantity = (String) Q12.getSelectedItem();

        String size = null;

        // Validate user input
        if (CoffeeName.isEmpty() || price.isEmpty() || quantity == null || 
            (!s1.isSelected() && !m1.isSelected() && !L1.isSelected() && !XL1.isSelected())) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `coffee` (`CoffeeName`, `price`, `quantity`, `size`) VALUES (?, ?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, CoffeeName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

            // Determine size
            if (s12.isSelected()) {
                size = s12.getText();
            } else if (m12.isSelected()) {
                size = m12.getText();
            } else if (L12.isSelected()) {
                size = L12.getText();
            } else if (XL12.isSelected()) {
                size = XL12.getText();
            }else {
                System.out.println("No coffee size  ");
            }
            stmt.setString(4, size);

            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Coffee added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } // Log closing error
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void ADDbtn10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ADDbtn10ActionPerformed
        // TODO add your handling code here:
        String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
        Cname10.setText("Dark Chocolate");

        String CoffeeName = Cname10.getText();
        String price = P10.getText();
        String quantity = (String) Q10.getSelectedItem();

        String size = null;

        // Validate user input
        if (CoffeeName.isEmpty() || price.isEmpty() || quantity == null || 
            (!s10.isSelected() && !m10.isSelected() && !L10.isSelected() && !XL10.isSelected())) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `coffee` (`CoffeeName`, `price`, `quantity`, `size`) VALUES (?, ?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, CoffeeName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

            // Determine size
            if (s10.isSelected()) {
                size = s10.getText();
            } else if (m10.isSelected()) {
                size = m10.getText();
            } else if (L10.isSelected()) {
                size = L10.getText();
            } else if (XL10.isSelected()) {
                size = XL10.getText();
            }else {
                System.out.println("No coffee size  ");
            }
            stmt.setString(4, size);

            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Coffee added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } // Log closing error
        }
    }//GEN-LAST:event_ADDbtn10ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
        Cname9.setText("Caramel");

        String CoffeeName = Cname9.getText();
        String price = P9.getText();
        String quantity = (String) Q9.getSelectedItem();

        String size = null;

        // Validate user input
        if (CoffeeName.isEmpty() || price.isEmpty() || quantity == null || 
            (!s9.isSelected() && !m9.isSelected() && !L9.isSelected() && !XL9.isSelected())) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `coffee` (`CoffeeName`, `price`, `quantity`, `size`) VALUES (?, ?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, CoffeeName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

            // Determine size
            if (s9.isSelected()) {
                size = s9.getText();
            } else if (m9.isSelected()) {
                size = m9.getText();
            } else if (L9.isSelected()) {
                size = L9.getText();
            } else if (XL9.isSelected()) {
                size = XL9.getText();
            }else {
                System.out.println("No coffee size  ");
            }
            stmt.setString(4, size);

            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Coffee added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } // Log closing error
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
        Cname7.setText("Espresso");
        

        String CoffeeName = Cname7.getText();
        String price = P7.getText();
        String quantity = (String) Q7.getSelectedItem();

        String size = null;

        // Validate user input
        if (CoffeeName.isEmpty() || price.isEmpty() || quantity == null || 
            (!s7.isSelected() && !m7.isSelected() && !L7.isSelected() && !XL7.isSelected())) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `coffee` (`CoffeeName`, `price`, `quantity`, `size`) VALUES (?, ?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, CoffeeName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

            // Determine size
            if (s7.isSelected()) {
                size = s7.getText();
            } else if (m7.isSelected()) {
                size = m7.getText();
            } else if (L7.isSelected()) {
                size = L7.getText();
            } else if (XL7.isSelected()) {
                size = XL7.getText();
            }else {
                System.out.println("No coffee size  ");
            }
            stmt.setString(4, size);

            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Coffee added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } // Log closing error
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
        Cname6.setText("Hazelnut");
        

        String CoffeeName = Cname6.getText();
        String price = P6.getText();
        String quantity = (String) Q6.getSelectedItem();

        String size = null;

        // Validate user input
        if (CoffeeName.isEmpty() || price.isEmpty() || quantity == null || 
            (!s6.isSelected() && !m6.isSelected() && !L6.isSelected() && !XL6.isSelected())) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `coffee` (`CoffeeName`, `price`, `quantity`, `size`) VALUES (?, ?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, CoffeeName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

            // Determine size
            if (s6.isSelected()) {
                size = s6.getText();
            } else if (m6.isSelected()) {
                size = m6.getText();
            } else if (L6.isSelected()) {
                size = L6.getText();
            } else if (XL6.isSelected()) {
                size = XL6.getText();
            }else {
                System.out.println("No coffee size  ");
            }
            stmt.setString(4, size);

            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Coffee added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } // Log closing error
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
        Cname8.setText("Cortado");
        

        String CoffeeName = Cname8.getText();
        String price = P8.getText();
        String quantity = (String) Q8.getSelectedItem();

        String size = null;

        // Validate user input
        if (CoffeeName.isEmpty() || price.isEmpty() || quantity == null || 
            (!s8.isSelected() && !m8.isSelected() && !L8.isSelected() && !XL8.isSelected())) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `coffee` (`CoffeeName`, `price`, `quantity`, `size`) VALUES (?, ?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, CoffeeName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

            // Determine size
            if (s8.isSelected()) {
                size = s8.getText();
            } else if (m8.isSelected()) {
                size = m8.getText();
            } else if (L8.isSelected()) {
                size = L8.getText();
            } else if (XL8.isSelected()) {
                size = XL8.getText();
            }else {
                System.out.println("No coffee size  ");
            }
            stmt.setString(4, size);

            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Coffee added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } // Log closing error
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
        Cname5.setText("Latte");
        

        String CoffeeName = Cname5.getText();
        String price = P5.getText();
        String quantity = (String) Q5.getSelectedItem();

        String size = null;

        // Validate user input
        if (CoffeeName.isEmpty() || price.isEmpty() || quantity == null || 
            (!s5.isSelected() && !m5.isSelected() && !L5.isSelected() && !XL5.isSelected())) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `coffee` (`CoffeeName`, `price`, `quantity`, `size`) VALUES (?, ?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, CoffeeName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

            // Determine size
            if (s5.isSelected()) {
                size = s5.getText();
            } else if (m5.isSelected()) {
                size = m5.getText();
            } else if (L5.isSelected()) {
                size = L5.getText();
            } else if (XL5.isSelected()) {
                size = XL5.getText();
            }else {
                System.out.println("No coffee size  ");
            }
            stmt.setString(4, size);

            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Coffee added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } // Log closing error
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:  
        String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
        Cname4.setText("Con Panna");

        String CoffeeName = Cname4.getText();
        String price = P4.getText();
        String quantity = (String) Q4.getSelectedItem();

        String size = null;

        // Validate user input
        if (CoffeeName.isEmpty() || price.isEmpty() || quantity == null || 
            (!s4.isSelected() && !m4.isSelected() && !L4.isSelected() && !XL4.isSelected())) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `coffee` (`CoffeeName`, `price`, `quantity`, `size`) VALUES (?, ?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, CoffeeName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

            // Determine size
            if (s4.isSelected()) {
                size = s4.getText();
            } else if (m4.isSelected()) {
                size = m4.getText();
            } else if (L4.isSelected()) {
                size = L4.getText();
            } else if (XL4.isSelected()) {
                size = XL4.getText();
            }else {
                System.out.println("No coffee size  ");
            }
            stmt.setString(4, size);

            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Coffee added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } // Log closing error
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void AddBtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBtn3ActionPerformed
        // TODO add your handling code here:
    String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
        Cname3.setText("Cacao");

        String CoffeeName = Cname3.getText();
        String price = P3.getText();
        String quantity = (String) Q3.getSelectedItem();

        String size = null;

        // Validate user input
        if (CoffeeName.isEmpty() || price.isEmpty() || quantity == null || 
            (!s3.isSelected() && !m3.isSelected() && !L3.isSelected() && !XL3.isSelected())) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `coffee` (`CoffeeName`, `price`, `quantity`, `size`) VALUES (?, ?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, CoffeeName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

            // Determine size
            if (s3.isSelected()) {
                size = s3.getText();
            } else if (m3.isSelected()) {
                size = m3.getText();
            } else if (L3.isSelected()) {
                size = L3.getText();
            } else if (XL3.isSelected()) {
                size = XL3.getText();
            }else {
                System.out.println("No coffee size  ");
            }
            stmt.setString(4, size);

            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Coffee added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } // Log closing error
        }
    }//GEN-LAST:event_AddBtn3ActionPerformed

    private void AddBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBtn2ActionPerformed
        // TODO add your handling code here:
    String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = "";
        Cname2.setText("Brewd");
        

        String CoffeeName = Cname2.getText();
        String price = P2.getText();
        String quantity = (String) Q2.getSelectedItem();

        String size = null;

        // Validate user input
        if (CoffeeName.isEmpty() || price.isEmpty() || quantity == null || 
            (!s2.isSelected() && !m2.isSelected() && !L2.isSelected() && !XL2.isSelected())) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `coffee` (`CoffeeName`, `price`, `quantity`, `size`) VALUES (?, ?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, CoffeeName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

            // Determine size
            if (s2.isSelected()) {
                size = s2.getText();
            } else if (m2.isSelected()) {
                size = m2.getText();
            } else if (L2.isSelected()) {
                size = L2.getText();
            } else if (XL2.isSelected()) {
                size = XL2.getText();
            }else {
                System.out.println("No coffee size  ");
            }
            stmt.setString(4, size);

            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Coffee added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } // Log closing error
        }
    }//GEN-LAST:event_AddBtn2ActionPerformed

    private void AddBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBtn1ActionPerformed
// Set a predefined coffee name in the Cname text field (e.g. Americano)
Cname.setText("Americano");  // This sets "Americano" as the coffee name

// Getting input values
String CoffeeName = Cname.getText();  // Coffee name from JTextField (now set to "Americano")
String price = P1.getText();          // Price from JTextField
String quantityString = (String) Q1.getSelectedItem();  // Quantity from JComboBox

String size = null;

// Validate user input
if (CoffeeName.isEmpty() || price.isEmpty() || quantityString == null || 
    (!s1.isSelected() && !m1.isSelected() && !L1.isSelected() && !XL1.isSelected())) {
    JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
    return; // Stop execution if validation fails
}

// Validate price is numeric
try {
    Double.parseDouble(price);  // Check if price is a valid number
} catch (NumberFormatException e) {
    JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
    return; // Stop execution if validation fails
}

// Validate quantity is a valid integer
int quantity = 0; // Default value if conversion fails
try {
    quantity = Integer.parseInt(quantityString); // Parse the selected quantity to int
} catch (NumberFormatException e) {
    JOptionPane.showMessageDialog(null, "Quantity must be a valid integer.", "Input Error", JOptionPane.ERROR_MESSAGE);
    return; // Stop execution if validation fails
}

// Determine the size based on the selected radio button
if (s1.isSelected()) {
    size = s1.getText();  // Small size
} else if (m1.isSelected()) {
    size = m1.getText();  // Medium size
} else if (L1.isSelected()) {
    size = L1.getText();  // Large size
} else if (XL1.isSelected()) {
    size = XL1.getText();  // Extra Large size
}

// Create a new Order object (for temporary storage)
Order newOrder = new Order(CoffeeName, Double.parseDouble(price), quantity, size);

// Add the order to the order list (temporarily storing it)
orderList.add(newOrder);

// Optionally, show a confirmation message
JOptionPane.showMessageDialog(null, "Order added successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);

// Optionally, you can display the current list of orders for the user to see
StringBuilder sb = new StringBuilder();
for (Order order : orderList) {
    sb.append(order.toString()).append("\n");
}
System.out.println("Current Orders:\n" + sb.toString());

    }//GEN-LAST:event_AddBtn1ActionPerformed

    private void P5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_P5ActionPerformed

    private void s5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s5ActionPerformed
        // TODO add your handling code here:
        P5.setText("150");
    }//GEN-LAST:event_s5ActionPerformed

    private void m5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m5ActionPerformed
        // TODO add your handling code here:
        P5.setText("160");
    }//GEN-LAST:event_m5ActionPerformed

    private void L5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_L5ActionPerformed
        // TODO add your handling code here:
        P5.setText("170");
    }//GEN-LAST:event_L5ActionPerformed

    private void XL5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XL5ActionPerformed
        // TODO add your handling code here:
        P5.setText("180");
    }//GEN-LAST:event_XL5ActionPerformed

    private void Q5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q5ActionPerformed
        // TODO add your handling code here:
        int p = Integer.parseInt(P5.getText());
        int q = Integer.parseInt((String) Q5.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P5.setText(t);
    }//GEN-LAST:event_Q5ActionPerformed

    private void P6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P6ActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_P6ActionPerformed

    private void s6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s6ActionPerformed
        // TODO add your handling code here:
         P6.setText("150");
    }//GEN-LAST:event_s6ActionPerformed

    private void m6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m6ActionPerformed
        // TODO add your handling code here:
        P6.setText("160");
    }//GEN-LAST:event_m6ActionPerformed

    private void L6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_L6ActionPerformed
        // TODO add your handling code here:
        P6.setText("170");
    }//GEN-LAST:event_L6ActionPerformed

    private void XL6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XL6ActionPerformed
        // TODO add your handling code here:
        P6.setText("180");
    }//GEN-LAST:event_XL6ActionPerformed

    private void Q6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q6ActionPerformed
        // TODO add your handling code here:
        int p = Integer.parseInt(P6.getText());
        int q = Integer.parseInt((String) Q6.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P6.setText(t);
    }//GEN-LAST:event_Q6ActionPerformed

    private void P7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_P7ActionPerformed

    private void s7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s7ActionPerformed
        // TODO add your handling code here:
        P7.setText("150");
    }//GEN-LAST:event_s7ActionPerformed

    private void m7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m7ActionPerformed
        // TODO add your handling code here:
        P7.setText("160");
    }//GEN-LAST:event_m7ActionPerformed

    private void L7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_L7ActionPerformed
        // TODO add your handling code here:
        P7.setText("170");
    }//GEN-LAST:event_L7ActionPerformed

    private void XL7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XL7ActionPerformed
        // TODO add your handling code here:
        P7.setText("180");
    }//GEN-LAST:event_XL7ActionPerformed

    private void Q7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q7ActionPerformed
        // TODO add your handling code here:
        int p = Integer.parseInt(P7.getText());
        int q = Integer.parseInt((String) Q7.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P7.setText(t);
    }//GEN-LAST:event_Q7ActionPerformed

    private void P8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_P8ActionPerformed

    private void s8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s8ActionPerformed
        // TODO add your handling code here:
        P8.setText("150");
    }//GEN-LAST:event_s8ActionPerformed

    private void m8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m8ActionPerformed
        // TODO add your handling code here:
        P8.setText("160");
    }//GEN-LAST:event_m8ActionPerformed

    private void L8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_L8ActionPerformed
        // TODO add your handling code here:
        P8.setText("170");
    }//GEN-LAST:event_L8ActionPerformed

    private void XL8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XL8ActionPerformed
        // TODO add your handling code here:
        P8.setText("180");
    }//GEN-LAST:event_XL8ActionPerformed

    private void Q8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q8ActionPerformed
        // TODO add your handling code here:
        int p = Integer.parseInt(P8.getText());
        int q = Integer.parseInt((String) Q8.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P8.setText(t);
        
    }//GEN-LAST:event_Q8ActionPerformed

    private void P9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_P9ActionPerformed

    private void m9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m9ActionPerformed
        // TODO add your handling code here:
        P9.setText("160");
    }//GEN-LAST:event_m9ActionPerformed

    private void L9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_L9ActionPerformed
        // TODO add your handling code here:
        P9.setText("170");
    }//GEN-LAST:event_L9ActionPerformed

    private void XL9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XL9ActionPerformed
        // TODO add your handling code here:
        P9.setText("180");
    }//GEN-LAST:event_XL9ActionPerformed

    private void s9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s9ActionPerformed
        // TODO add your handling code here:
        P9.setText("150");
    }//GEN-LAST:event_s9ActionPerformed

    private void Q9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q9ActionPerformed
        // TODO add your handling code here:
        int p = Integer.parseInt(P9.getText());
        int q = Integer.parseInt((String) Q9.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P9.setText(t);
    }//GEN-LAST:event_Q9ActionPerformed

    private void P10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_P10ActionPerformed

    private void s10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s10ActionPerformed
        // TODO add your handling code here:
        P10.setText("150");
    }//GEN-LAST:event_s10ActionPerformed

    private void m10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m10ActionPerformed
        // TODO add your handling code here:
        P10.setText("160");
    }//GEN-LAST:event_m10ActionPerformed

    private void L10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_L10ActionPerformed
        // TODO add your handling code here:
        P10.setText("170");
    }//GEN-LAST:event_L10ActionPerformed

    private void XL10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XL10ActionPerformed
        // TODO add your handling code here:
        P10.setText("180");
    }//GEN-LAST:event_XL10ActionPerformed

    private void Q10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q10ActionPerformed
        // TODO add your handling code here:
        int p = Integer.parseInt(P10.getText());
        int q = Integer.parseInt((String) Q10.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P10.setText(t);
    }//GEN-LAST:event_Q10ActionPerformed

    private void P11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_P11ActionPerformed

    private void L11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_L11ActionPerformed
        // TODO add your handling code here:
        P11.setText("170");
    }//GEN-LAST:event_L11ActionPerformed

    private void XL11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XL11ActionPerformed
        // TODO add your handling code here:
        P11.setText("180");
    }//GEN-LAST:event_XL11ActionPerformed

    private void Q11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q11ActionPerformed
        // TODO add your handling code here:
        int p = Integer.parseInt(P11.getText());
        int q = Integer.parseInt((String) Q11.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P11.setText(t);
    }//GEN-LAST:event_Q11ActionPerformed

    private void P12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_P12ActionPerformed

    private void s12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s12ActionPerformed
        // TODO add your handling code here:
        P12.setText("150");
    }//GEN-LAST:event_s12ActionPerformed

    private void L12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_L12ActionPerformed
        // TODO add your handling code here:
        P12.setText("170");
    }//GEN-LAST:event_L12ActionPerformed

    private void XL12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XL12ActionPerformed
        // TODO add your handling code here:
        P12.setText("180");
    }//GEN-LAST:event_XL12ActionPerformed

    private void Q12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q12ActionPerformed
        // TODO add your handling code here:
        int p = Integer.parseInt(P12.getText());
        int q = Integer.parseInt((String)Q12.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P12.setText(t);
    }//GEN-LAST:event_Q12ActionPerformed

    private void TotalBUttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TotalBUttonActionPerformed
        // TODO add your handling code here:
        // Assuming you have a list of orders in your application
    List<Order> orders = getOrders();  // Replace with your method to get the orders
    OrderList ol = new OrderList(orders);  // Pass the list of orders to the constructor
    ol.setVisible(true);  // Show the OrderList frame
    this.dispose();  // Close the current frame
    }//GEN-LAST:event_TotalBUttonActionPerformed

    private void NextBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextBtnActionPerformed
        // TODO add your handling code here:
        TeaDashBoard td = new TeaDashBoard();
        td.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_NextBtnActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton12ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CoffeeDashboad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CoffeeDashboad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CoffeeDashboad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CoffeeDashboad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CoffeeDashboad().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ADDbtn10;
    private javax.swing.JButton AddBtn1;
    private javax.swing.JButton AddBtn2;
    private javax.swing.JButton AddBtn3;
    private javax.swing.JPanel Americano;
    private javax.swing.ButtonGroup AmericanoBTG;
    private javax.swing.JLabel BackGroundImage2;
    private javax.swing.JPanel Brewed;
    private javax.swing.ButtonGroup BrewedBTG;
    private javax.swing.JPanel Cacao;
    private javax.swing.ButtonGroup CacaoBTG;
    private javax.swing.JPanel Caramel;
    private javax.swing.ButtonGroup CaramelBTG;
    private javax.swing.JLabel Cname;
    private javax.swing.JLabel Cname10;
    private javax.swing.JLabel Cname11;
    private javax.swing.JLabel Cname12;
    private javax.swing.JLabel Cname2;
    private javax.swing.JLabel Cname3;
    private javax.swing.JLabel Cname4;
    private javax.swing.JLabel Cname5;
    private javax.swing.JLabel Cname6;
    private javax.swing.JLabel Cname7;
    private javax.swing.JLabel Cname8;
    private javax.swing.JLabel Cname9;
    private javax.swing.JLabel CoffeSize14;
    private javax.swing.JLabel CoffeSize15;
    private javax.swing.JLabel CoffeSize16;
    private javax.swing.JLabel CoffeSize17;
    private javax.swing.JLabel CoffeSize18;
    private javax.swing.JLabel CoffeSize19;
    private javax.swing.JLabel CoffeSize20;
    private javax.swing.JLabel CoffeSize21;
    private javax.swing.JLabel CoffeSize22;
    private javax.swing.JLabel CoffeSize23;
    private javax.swing.JLabel CoffeSize25;
    private javax.swing.JLabel CoffeSize26;
    private javax.swing.JLabel CoffeSize8;
    private javax.swing.JLabel CoffeeMenu;
    private javax.swing.JLabel CoffeeName14;
    private javax.swing.JLabel CoffeeName15;
    private javax.swing.JLabel CoffeeName16;
    private javax.swing.JLabel CoffeeName17;
    private javax.swing.JLabel CoffeeName18;
    private javax.swing.JLabel CoffeeName19;
    private javax.swing.JLabel CoffeeName20;
    private javax.swing.JLabel CoffeeName21;
    private javax.swing.JLabel CoffeeName22;
    private javax.swing.JLabel CoffeeName23;
    private javax.swing.JLabel CoffeeName25;
    private javax.swing.JLabel CoffeeName8;
    private javax.swing.JLabel CoffeePrice14;
    private javax.swing.JLabel CoffeePrice15;
    private javax.swing.JLabel CoffeePrice16;
    private javax.swing.JLabel CoffeePrice17;
    private javax.swing.JLabel CoffeePrice18;
    private javax.swing.JLabel CoffeePrice19;
    private javax.swing.JLabel CoffeePrice20;
    private javax.swing.JLabel CoffeePrice21;
    private javax.swing.JLabel CoffeePrice22;
    private javax.swing.JLabel CoffeePrice23;
    private javax.swing.JLabel CoffeePrice25;
    private javax.swing.JLabel CoffeePrice8;
    private javax.swing.JPanel ConPanna;
    private javax.swing.ButtonGroup ConPannaBTG;
    private javax.swing.JPanel Cortado;
    private javax.swing.ButtonGroup CortadoBTG;
    private javax.swing.JPanel DarkChocolate;
    private javax.swing.ButtonGroup DarkChocolateBTG;
    private javax.swing.JPanel Espresso;
    private javax.swing.ButtonGroup EspressoBTG;
    private javax.swing.JPanel FlatWhite;
    private javax.swing.ButtonGroup FlatWhiteBTG;
    private javax.swing.ButtonGroup HazelNutBTG;
    private javax.swing.JPanel Hazelnut;
    private javax.swing.JCheckBox L1;
    private javax.swing.JCheckBox L10;
    private javax.swing.JCheckBox L11;
    private javax.swing.JCheckBox L12;
    private javax.swing.JCheckBox L2;
    private javax.swing.JCheckBox L3;
    private javax.swing.JCheckBox L4;
    private javax.swing.JCheckBox L5;
    private javax.swing.JCheckBox L6;
    private javax.swing.JCheckBox L7;
    private javax.swing.JCheckBox L8;
    private javax.swing.JCheckBox L9;
    private javax.swing.JPanel Latte;
    private javax.swing.ButtonGroup LatteBTG;
    private javax.swing.JButton NextBtn;
    private javax.swing.JTextField P1;
    private javax.swing.JTextField P10;
    private javax.swing.JTextField P11;
    private javax.swing.JTextField P12;
    private javax.swing.JTextField P2;
    private javax.swing.JTextField P3;
    private javax.swing.JTextField P4;
    private javax.swing.JTextField P5;
    private javax.swing.JTextField P6;
    private javax.swing.JTextField P7;
    private javax.swing.JTextField P8;
    private javax.swing.JTextField P9;
    private javax.swing.JComboBox<String> Q1;
    private javax.swing.JComboBox<String> Q10;
    private javax.swing.JComboBox<String> Q11;
    private javax.swing.JComboBox<String> Q12;
    private javax.swing.JComboBox<String> Q2;
    private javax.swing.JComboBox<String> Q3;
    private javax.swing.JComboBox<String> Q4;
    private javax.swing.JComboBox<String> Q5;
    private javax.swing.JComboBox<String> Q6;
    private javax.swing.JComboBox<String> Q7;
    private javax.swing.JComboBox<String> Q8;
    private javax.swing.JComboBox<String> Q9;
    private javax.swing.JButton ToHomePage;
    private javax.swing.JButton TotalBUtton;
    private javax.swing.JPanel WhiteMocha;
    private javax.swing.ButtonGroup WhiteMochaBTG;
    private javax.swing.JCheckBox XL1;
    private javax.swing.JCheckBox XL10;
    private javax.swing.JCheckBox XL11;
    private javax.swing.JCheckBox XL12;
    private javax.swing.JCheckBox XL2;
    private javax.swing.JCheckBox XL3;
    private javax.swing.JCheckBox XL4;
    private javax.swing.JCheckBox XL5;
    private javax.swing.JCheckBox XL6;
    private javax.swing.JCheckBox XL7;
    private javax.swing.JCheckBox XL8;
    private javax.swing.JCheckBox XL9;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel100;
    private javax.swing.JLabel jLabel102;
    private javax.swing.JLabel jLabel107;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JLabel jLabel94;
    private javax.swing.JLabel jLabel96;
    private javax.swing.JLabel jLabel98;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox m1;
    private javax.swing.JCheckBox m10;
    private javax.swing.JCheckBox m11;
    private javax.swing.JCheckBox m12;
    private javax.swing.JCheckBox m2;
    private javax.swing.JCheckBox m3;
    private javax.swing.JCheckBox m4;
    private javax.swing.JCheckBox m5;
    private javax.swing.JCheckBox m6;
    private javax.swing.JCheckBox m7;
    private javax.swing.JCheckBox m8;
    private javax.swing.JCheckBox m9;
    private javax.swing.JCheckBox s1;
    private javax.swing.JCheckBox s10;
    private javax.swing.JCheckBox s11;
    private javax.swing.JCheckBox s12;
    private javax.swing.JCheckBox s2;
    private javax.swing.JCheckBox s3;
    private javax.swing.JCheckBox s4;
    private javax.swing.JCheckBox s5;
    private javax.swing.JCheckBox s6;
    private javax.swing.JCheckBox s7;
    private javax.swing.JCheckBox s8;
    private javax.swing.JCheckBox s9;
    // End of variables declaration//GEN-END:variables


}
